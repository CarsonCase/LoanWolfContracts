{
  "contractName": "ERC20CollateralPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bonds",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "addInterest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bondContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collateralLookup",
      "outputs": [
        {
          "internalType": "address",
          "name": "ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ammount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inverseInterestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accrualPeriod",
          "type": "uint256"
        }
      ],
      "name": "configureNew",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "getNumberOfLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isComplete",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "isDelinquent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "issueBonds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanLookup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "issued",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ERC20Address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentDueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRateInverse",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accrualPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPaymentsValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "awaitingCollection",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentComplete",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Ammount",
          "type": "uint256"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ERC20Contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ammount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_loanId",
          "type": "uint256"
        }
      ],
      "name": "returnCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amm",
          "type": "uint256"
        }
      ],
      "name": "withdrawl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bonds\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ammount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"addInterest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ERC20Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ammount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inverseInterestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accrualPeriod\",\"type\":\"uint256\"}],\"name\":\"configureNew\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getNumberOfLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"isDelinquent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"issueBonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIDs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanLookup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"issued\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ERC20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateInverse\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accrualPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPaymentsValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"awaitingCollection\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentComplete\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Ammount\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"returnCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amm\",\"type\":\"uint256\"}],\"name\":\"withdrawl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carson Case\",\"kind\":\"dev\",\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"params\":{\"_ERC20Contract\":\"address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\",\"_ammount\":\"is the ammount to add as collateral\",\"_loanId\":\"is the loan ID to add collateral to\"}},\"addInterest(uint256,uint256)\":{\"params\":{\"_amm\":\"the ammount of interest to add\",\"_id\":\"is the id of the loan\"},\"returns\":{\"_0\":\"true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan.\"}},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"borrower is msg.sender for testing. In production might want to make this a param\",\"params\":{\"_accrualPeriod\":\"the time it takes for interest to accrue in seconds\",\"_borrower\":\"is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan\",\"_erc20\":\"is the ERC20 contract address that will be used for payments\",\"_inverseInterestRate\":\"the interest rate expressed as inverse. 2% = 1/5 = inverse of 5\",\"_minPayment\":\"is the minimum payment that must be made before the payment period ends\",\"_paymentPeriod\":\"payment must be made by this time or delinquent function will return true\",\"_principal\":\"the origional loan value before interest\"},\"returns\":{\"_0\":\"the id it just created\"}},\"constructor\":{\"params\":{\"_bonds\":\"is the contract address of bonds\"}},\"getId(address,uint256)\":{\"params\":{\"_borrower\":\"is borrower\",\"_index\":\"is the index in the borrowers loan array\"},\"returns\":{\"_0\":\"the loan ID\"}},\"getInterest(uint256)\":{\"params\":{\"_id\":\"is the loan ID\"},\"returns\":{\"_0\":\"inverse interest rate\"}},\"getNumberOfLoans(address)\":{\"params\":{\"_who\":\"is who to look up\"},\"returns\":{\"_0\":\"length\"}},\"isComplete(uint256)\":{\"params\":{\"_id\":\"of loan to check\"},\"returns\":{\"_0\":\"return if the contract is payed off or not as bool\"}},\"isDelinquent(uint256)\":{\"params\":{\"_id\":\"is the hash id of the loan. Same as bond ERC1155 ID as well\"},\"returns\":{\"_0\":\"if delinquent or not. Meaning missed a payment\"}},\"issueBonds(uint256)\":{\"params\":{\"_id\":\"loan ID\"},\"returns\":{\"_0\":\"the loan principal (so bonds knows how many NFTs to mint)\",\"_1\":\"the borrowers address (so bonds can make sure borrower is calling this function)\"}},\"payment(uint256,uint256)\":{\"params\":{\"_erc20Ammount\":\"is ammount in loan's ERC20 to pay\",\"_id\":\"to pay off\"}},\"returnCollateral(uint256)\":{\"params\":{\"_loanId\":\"is the loan ID\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdrawl(uint256,uint256)\":{\"params\":{\"_amm\":\"is the ammount to send\",\"_id\":\"is the id of the bond to send in\"}}},\"title\":\"ERC20CollateralPayment\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCollateral(address,uint256,uint256)\":{\"notice\":\"addCollateral must be called before issuing loan\"},\"addInterest(uint256,uint256)\":{\"notice\":\"Called each time new NFTs are minted by staking\"},\"configureNew(address,address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"contract must be configured before bonds are issued. Pushes new loan to array for user\"},\"constructor\":{\"notice\":\"constructor just runs the ERC20PaymentStandard constructor\"},\"getId(address,uint256)\":{\"notice\":\"Returns the ID for a loan given the borrower and index in the array\"},\"getInterest(uint256)\":{\"notice\":\"get the interest rate of a loan. Makes it easy for other contract since it doens't have to use parse struct\"},\"getNumberOfLoans(address)\":{\"notice\":\"gets the number of loans a person has\"},\"isComplete(uint256)\":{\"notice\":\"helper function\"},\"isDelinquent(uint256)\":{\"notice\":\"This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete\"},\"issueBonds(uint256)\":{\"notice\":\"called when bonds are issued so as to make sure lender can only mint bonds once.\"},\"payment(uint256,uint256)\":{\"notice\":\"function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first\"},\"returnCollateral(uint256)\":{\"notice\":\"return Collateral when the loan is complete \"},\"withdrawl(uint256,uint256)\":{\"notice\":\"MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds.\"}},\"notice\":\"this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":\"ERC20CollateralPayment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol\":{\"keccak256\":\"0x0f49407192166298d5187663a9bf567df31ae01659ab00f516b9fb5b3e5ba776\",\"license\":\"None\",\"urls\":[\"bzz-raw://e36d9511a2ac1d692f72f8a3c68479c46f978adab8725b9596b1aac8e440d688\",\"dweb:/ipfs/QmaERQVnyTvHxTa7zPDgaaZ4YxzhNqQPMNvqVL5kHjGVWc\"]},\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol\":{\"keccak256\":\"0xff4bb6fed4d328c9a875b3c5f7aeef348f77ba68917fb422f506c1adebb55be7\",\"license\":\"None\",\"urls\":[\"bzz-raw://d9c269097cd56454fa63a2015660f34c3776047f6c600369b1d0fcb30c66c93d\",\"dweb:/ipfs/QmPvZpRj5ZiCaUBsoAxtqiivf9jAvzr9Kr5YP27dd8ya9t\"]},\"/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/IERC20PaymentStandard.sol\":{\"keccak256\":\"0x79cad84485af9190d6463900ba71bb4f32a1e4cb478e1820209a81a407fdd93f\",\"license\":\"None\",\"urls\":[\"bzz-raw://ba946e2dc962dbf294751a73a5dc2cee74a73878a3edbe6071d48f365a810031\",\"dweb:/ipfs/QmRi9HAxCrZNKHsWBjpn8ZJSaWgs3prtAqN8iWqV79zDTd\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x8d0a3d2756dc8eff2b2563b52a6dcd3ab36e07b57211d3ac7c76efee6c4682e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47bcf0ab599479a00d280cea1f47857b993ca0d0fb2cffc17ef1c452c5f61140\",\"dweb:/ipfs/QmPsJeyQ4L5bKTgsEk6UiNuTd35wUAmAm2ko9F4J3SsU6V\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x249bc2a6d919da5f5145950664134cfcf2f66874bda801fd3b8fb861783da079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db9d720fadb1315ba64790815f9f1d80237cca584fc530b8906519bd46ff4cc\",\"dweb:/ipfs/QmXQSGPuGHG5e9ZRVbcUymP3B78cn6ZjfaiaEwd3P3yBCF\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc7aa8a96aaeb7e1672a3d5fd37582136ff46b6a6cafabcc40ec0e00a42915e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f294719963da5d6c0aa89f6e79eb6dbcbcc258a2f42686e735dbb0791593a761\",\"dweb:/ipfs/QmTnVcJfNe5728bUBhjMmBXJFDR1HwVQfw9jGmexbGmS7z\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2ccdc162657b677334eb08a60bb50a0dd74b22eff7150abb06487f58dbebd5e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fff47f23d2b9cfce4660566d3e5fa355959a6f3ba8c8394271addd9845a07d58\",\"dweb:/ipfs/QmU6vHnARdZscV47wHaPRnzS3pqSKG3YoLbhMUbyAHxLda\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0xfb1161632a10d0bd366c80db583246fa490183b45ec4f59acb43b97d1a7437b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1b773c4f83eed25714e54f3ac4d7d5c43f70ba9adf7a0039870395280d57ab0\",\"dweb:/ipfs/QmeMWUj4afupT66btFmbXPWePdv1NAVbJuAGwb3YmDGjH5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806391f67191116100ad578063d41db84b11610071578063d41db84b14610382578063e62e1e42146103b3578063e7004a7a146103e3578063f1f2a75714610401578063f23a6e611461043157610121565b806391f67191146102ba578063a97868be146102ea578063bc197c8114610306578063c5d3e11d14610336578063c75cf2451461036657610121565b806344e02dbc116100f457806344e02dbc146101d35780634af50116146101ef5780635fe2d6891461021f578063630e69ad1461024f5780637e23f5dd1461028a57610121565b806301ffc9a7146101265780632f63147f146101565780633a0be1a614610172578063444da0c9146101a2575b600080fd5b610140600480360381019061013b9190611d0e565b610461565b60405161014d9190612097565b60405180910390f35b610170600480360381019061016b9190611d60565b6104db565b005b61018c60048036038101906101879190611d37565b610816565b6040516101999190612097565b60405180910390f35b6101bc60048036038101906101b79190611d37565b61087b565b6040516101ca92919061206e565b60405180910390f35b6101ed60048036038101906101e89190611d37565b6108bf565b005b61020960048036038101906102049190611c5a565b610aba565b60405161021691906122c7565b60405180910390f35b61023960048036038101906102349190611d37565b610aeb565b60405161024691906122c7565b60405180910390f35b61026960048036038101906102649190611d37565b610b0b565b6040516102819c9b9a999897969594939291906120b2565b60405180910390f35b6102a4600480360381019061029f9190611a45565b610bb8565b6040516102b191906122c7565b60405180910390f35b6102d460048036038101906102cf9190611d37565b610c04565b6040516102e19190612097565b60405180910390f35b61030460048036038101906102ff9190611d60565b610c39565b005b610320600480360381019061031b9190611a6e565b611068565b60405161032d919061216c565b60405180910390f35b610350600480360381019061034b9190611c5a565b61107d565b60405161035d91906122c7565b60405180910390f35b610380600480360381019061037b9190611c96565b6110ba565b005b61039c60048036038101906103979190611d37565b611381565b6040516103aa9291906122e2565b60405180910390f35b6103cd60048036038101906103c89190611d60565b6114fb565b6040516103da9190612097565b60405180910390f35b6103eb6115da565b6040516103f89190611fc4565b60405180910390f35b61041b60048036038101906104169190611bbc565b6115fe565b60405161042891906122c7565b60405180910390f35b61044b60048036038101906104469190611b2d565b611874565b604051610458919061216c565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d457506104d382611889565b5b9050919050565b81600160008281526020019081526020016000206008015460016000838152602001908152602001600020600a01541061054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190612207565b60405180910390fd5b600060016000858152602001908152602001600020604051806101800160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152505090508060a00151831015806106b957508060a001518161016001518261012001516106b79190612405565b105b6106f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ef906121c7565b60405180910390fd5b806020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161073993929190611fdf565b602060405180830381600087803b15801561075357600080fd5b505af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190611ce5565b50826001600086815260200190815260200160002060090160008282546107b291906123af565b925050819055508060600151426107c991906123af565b60016000868152602001908152602001600020600301819055508260016000868152602001908152602001600020600a01600082825461080991906123af565b9250508190555050505050565b6000600160008381526020019081526020016000206008015460016000848152602001908152602001600020600a015410158061087457506001600083815260200190815260200160002060000160009054906101000a900460ff16155b9050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6001600082815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a906122a7565b60405180910390fd5b61096c81610816565b8061099857506001600082815260200190815260200160002060000160009054906101000a900460ff16155b6109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce90612247565b60405180910390fd5b60006003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360036000868152602001908152602001600020600101546040518363ffffffff1660e01b8152600401610a6392919061206e565b602060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab59190611ce5565b505050565b60026020528160005260406000208181548110610ad657600080fd5b90600052602060002001600091509150505481565b600060016000838152602001908152602001600020600501549050919050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a015490508c565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600060016000838152602001908152602001600020600301544210158015610c325750610c3082610816565b155b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006001600085815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006003600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506001600086815260200190815260200160002060000160009054906101000a900460ff16610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f906121e7565b60405180910390fd5b6001600086815260200190815260200160002060090154841115610d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8890612267565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f242432a333088886040518563ffffffff1660e01b8152600401610dd09493929190612016565b600060405180830381600087803b158015610dea57600080fd5b505af1158015610dfe573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610e3d92919061206e565b602060405180830381600087803b158015610e5757600080fd5b505af1158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190611ce5565b50610e9985610c04565b8015610ebc57506000600360008781526020019081526020016000206001015414155b15611061578360036000878152602001908152602001600020600101541015610fa457600060036000878152602001908152602001600020600101819055508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360036000898152602001908152602001600020600101546040518363ffffffff1660e01b8152600401610f4c92919061206e565b602060405180830381600087803b158015610f6657600080fd5b505af1158015610f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9e9190611ce5565b50611060565b83600360008781526020019081526020016000206001016000828254610fca9190612405565b925050819055508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161100c92919061206e565b602060405180830381600087803b15801561102657600080fd5b505af115801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190611ce5565b505b5b5050505050565b600063bc197c8160e01b905095945050505050565b60008030848460405160200161109593929190611f87565b6040516020818303038152906040528051906020012060001c90508091505092915050565b3373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115590612227565b60405180910390fd5b60008390506000600360008481526020019081526020016000206001015414156112195760405180604001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001848152506003600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506112eb565b6003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b490612287565b60405180910390fd5b826003600084815260200190815260200160002060010160008282546112e391906123af565b925050819055505b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161132893929190611fdf565b602060405180830381600087803b15801561134257600080fd5b505af1158015611356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a9190611ce5565b5050505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611412576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611409906121a7565b60405180910390fd5b6001600084815260200190815260200160002060000160009054906101000a900460ff1615611476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146d90612187565b60405180910390fd5b600180600085815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060016000848152602001908152602001600020600701546001600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461158c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611583906121a7565b60405180910390fd5b61159582610816565b6115cf57826001600084815260200190815260200160002060080160008282546115bf91906123af565b92505081905550600190506115d4565b600090505b92915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061164d88600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061107d565b9050600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556040518061018001604052806000151581526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001874261171491906123af565b81526020018881526020018581526020018481526020018681526020018681526020016000815260200160008152506001600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080155610140820151816009015561016082015181600a015590505080915050979650505050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600061190661190184612330565b61230b565b9050808382526020820190508285602086028201111561192557600080fd5b60005b85811015611955578161193b8882611a30565b845260208401935060208301925050600181019050611928565b5050509392505050565b600061197261196d8461235c565b61230b565b90508281526020810184848401111561198a57600080fd5b6119958482856124ad565b509392505050565b6000813590506119ac816128d6565b92915050565b600082601f8301126119c357600080fd5b81356119d38482602086016118f3565b91505092915050565b6000815190506119eb816128ed565b92915050565b600081359050611a0081612904565b92915050565b600082601f830112611a1757600080fd5b8135611a2784826020860161195f565b91505092915050565b600081359050611a3f8161291b565b92915050565b600060208284031215611a5757600080fd5b6000611a658482850161199d565b91505092915050565b600080600080600060a08688031215611a8657600080fd5b6000611a948882890161199d565b9550506020611aa58882890161199d565b945050604086013567ffffffffffffffff811115611ac257600080fd5b611ace888289016119b2565b935050606086013567ffffffffffffffff811115611aeb57600080fd5b611af7888289016119b2565b925050608086013567ffffffffffffffff811115611b1457600080fd5b611b2088828901611a06565b9150509295509295909350565b600080600080600060a08688031215611b4557600080fd5b6000611b538882890161199d565b9550506020611b648882890161199d565b9450506040611b7588828901611a30565b9350506060611b8688828901611a30565b925050608086013567ffffffffffffffff811115611ba357600080fd5b611baf88828901611a06565b9150509295509295909350565b600080600080600080600060e0888a031215611bd757600080fd5b6000611be58a828b0161199d565b9750506020611bf68a828b0161199d565b9650506040611c078a828b01611a30565b9550506060611c188a828b01611a30565b9450506080611c298a828b01611a30565b93505060a0611c3a8a828b01611a30565b92505060c0611c4b8a828b01611a30565b91505092959891949750929550565b60008060408385031215611c6d57600080fd5b6000611c7b8582860161199d565b9250506020611c8c85828601611a30565b9150509250929050565b600080600060608486031215611cab57600080fd5b6000611cb98682870161199d565b9350506020611cca86828701611a30565b9250506040611cdb86828701611a30565b9150509250925092565b600060208284031215611cf757600080fd5b6000611d05848285016119dc565b91505092915050565b600060208284031215611d2057600080fd5b6000611d2e848285016119f1565b91505092915050565b600060208284031215611d4957600080fd5b6000611d5784828501611a30565b91505092915050565b60008060408385031215611d7357600080fd5b6000611d8185828601611a30565b9250506020611d9285828601611a30565b9150509250929050565b611da581612439565b82525050565b611dbc611db782612439565b6124ed565b82525050565b611dcb8161244b565b82525050565b611dda81612457565b82525050565b6000611ded602b8361239e565b9150611df882612597565b604082019050919050565b6000611e10602d8361239e565b9150611e1b826125e6565b604082019050919050565b6000611e3360218361239e565b9150611e3e82612635565b604082019050919050565b6000611e5660478361239e565b9150611e6182612684565b606082019050919050565b6000611e7960218361239e565b9150611e84826126f9565b604082019050919050565b6000611e9c60248361239e565b9150611ea782612748565b604082019050919050565b6000611ebf603a8361239e565b9150611eca82612797565b604082019050919050565b6000611ee260008361238d565b9150611eed826127e6565b600082019050919050565b6000611f0560358361239e565b9150611f10826127e9565b604082019050919050565b6000611f2860408361239e565b9150611f3382612838565b604082019050919050565b6000611f4b60288361239e565b9150611f5682612887565b604082019050919050565b611f6a816124a3565b82525050565b611f81611f7c826124a3565b612511565b82525050565b6000611f938286611dab565b601482019150611fa38285611dab565b601482019150611fb38284611f70565b602082019150819050949350505050565b6000602082019050611fd96000830184611d9c565b92915050565b6000606082019050611ff46000830186611d9c565b6120016020830185611d9c565b61200e6040830184611f61565b949350505050565b600060a08201905061202b6000830187611d9c565b6120386020830186611d9c565b6120456040830185611f61565b6120526060830184611f61565b818103608083015261206381611ed5565b905095945050505050565b60006040820190506120836000830185611d9c565b6120906020830184611f61565b9392505050565b60006020820190506120ac6000830184611dc2565b92915050565b6000610180820190506120c8600083018f611dc2565b6120d5602083018e611d9c565b6120e2604083018d611d9c565b6120ef606083018c611f61565b6120fc608083018b611f61565b61210960a083018a611f61565b61211660c0830189611f61565b61212360e0830188611f61565b612131610100830187611f61565b61213f610120830186611f61565b61214d610140830185611f61565b61215b610160830184611f61565b9d9c50505050505050505050505050565b60006020820190506121816000830184611dd1565b92915050565b600060208201905081810360008301526121a081611de0565b9050919050565b600060208201905081810360008301526121c081611e03565b9050919050565b600060208201905081810360008301526121e081611e26565b9050919050565b6000602082019050818103600083015261220081611e49565b9050919050565b6000602082019050818103600083015261222081611e6c565b9050919050565b6000602082019050818103600083015261224081611e8f565b9050919050565b6000602082019050818103600083015261226081611eb2565b9050919050565b6000602082019050818103600083015261228081611ef8565b9050919050565b600060208201905081810360008301526122a081611f1b565b9050919050565b600060208201905081810360008301526122c081611f3e565b9050919050565b60006020820190506122dc6000830184611f61565b92915050565b60006040820190506122f76000830185611f61565b6123046020830184611d9c565b9392505050565b6000612315612326565b905061232182826124bc565b919050565b6000604051905090565b600067ffffffffffffffff82111561234b5761234a61254a565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156123775761237661254a565b5b61238082612579565b9050602081019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006123ba826124a3565b91506123c5836124a3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123fa576123f961251b565b5b828201905092915050565b6000612410826124a3565b915061241b836124a3565b92508282101561242e5761242d61251b565b5b828203905092915050565b600061244482612483565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6124c582612579565b810181811067ffffffffffffffff821117156124e4576124e361254a565b5b80604052505050565b60006124f8826124ff565b9050919050565b600061250a8261258a565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f596f75206861766520616c72656164792069737375656420626f6e647320666f60008201527f722074686973206c6f616e000000000000000000000000000000000000000000602082015250565b7f4f6e6c792074686520626f6e6420636f6e74726163742063616e2063616c6c2060008201527f746869732066756e6374696f6e00000000000000000000000000000000000000602082015250565b7f596f75206d757374206d616b6520746865206d696e696d756d207061796d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b7f74686973206c6f616e20686173206e6f74206265656e2069737375656420796560008201527f742e20486f7720646f20796f75206576656e206861766520626f6e647320666f60208201527f722069743f3f3f00000000000000000000000000000000000000000000000000604082015250565b7f5468697320636f6e747261637420697320616c72656179642070616964206f6660008201527f6600000000000000000000000000000000000000000000000000000000000000602082015250565b7f6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c617460008201527f6572616c00000000000000000000000000000000000000000000000000000000602082015250565b7f6c6f616e206d7573742062652070616964206f6666206f72206e6f742073746160008201527f7274656420746f20636f6c6c65637420636f6c6c61746572616c000000000000602082015250565b50565b7f5468657265206973206e6f7420656e6f756768207061796d656e74732061766160008201527f696c61626c6520666f7220636f6c6c656374696f6e0000000000000000000000602082015250565b7f5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f752060008201527f6d75737420757365207468652073616d65204552433230206164647265737320602082015250565b7f6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f60008201527f6c6c61746572616c000000000000000000000000000000000000000000000000602082015250565b6128df81612439565b81146128ea57600080fd5b50565b6128f68161244b565b811461290157600080fd5b50565b61290d81612457565b811461291857600080fd5b50565b612924816124a3565b811461292f57600080fd5b5056fea2646970667358221220bfd716d27a71b80ab81c6eaaae371372085589f7a5a2fc639be39c9bd2c243a064736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:805:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:18",
                "type": ""
              }
            ],
            "src": "7:143:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:18",
                "type": ""
              }
            ],
            "src": "156:284:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "491:51:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "501:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "512:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "501:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "483:7:18",
                "type": ""
              }
            ],
            "src": "446:96:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:81:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "603:65:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "618:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:42:18",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:54:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "603:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "575:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "585:7:18",
                "type": ""
              }
            ],
            "src": "548:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "746:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "771:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "753:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "743:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "733:2:18"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:18",
                "type": ""
              }
            ],
            "src": "680:122:18"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:28683:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "126:521:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "136:90:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "218:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "161:56:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "161:64:18"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "145:15:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "145:81:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "136:5:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "235:16:18",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "246:5:18"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "239:3:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "267:5:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "274:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "260:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:21:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "282:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "293:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "300:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "289:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "289:16:18"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "282:3:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "314:17:18",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "325:6:18"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "318:3:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "380:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "389:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "392:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "382:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "382:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "382:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "350:3:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "359:6:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "367:4:18",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "355:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "355:17:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "346:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "346:27:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "375:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "343:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:36:18"
                  },
                  "nodeType": "YulIf",
                  "src": "340:2:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "465:176:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "479:21:18",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:18"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "483:10:18",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "520:3:18"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:10:18"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "558:3:18"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "525:20:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "525:37:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "513:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "513:50:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "513:50:18"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "576:21:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "587:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "592:4:18",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "583:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "583:14:18"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "576:3:18"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "610:21:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "621:3:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "626:4:18",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "617:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "617:14:18"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "610:3:18"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "427:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "430:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "424:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "438:18:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "440:14:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "449:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "452:1:18",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "445:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "445:9:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "440:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "409:14:18",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "411:10:18",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "420:1:18",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "415:1:18",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "405:236:18"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "96:6:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "104:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "112:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "120:5:18",
                "type": ""
              }
            ],
            "src": "24:623:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "736:260:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "746:74:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "812:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "771:40:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:48:18"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "755:15:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:65:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "746:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "836:5:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "843:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "829:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "829:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "829:21:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "859:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "874:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "870:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "870:16:18"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "863:3:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "924:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "933:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "936:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "926:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "926:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "926:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "905:3:18"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "910:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "901:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "901:16:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "919:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "898:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:25:18"
                  },
                  "nodeType": "YulIf",
                  "src": "895:2:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "973:3:18"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "978:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "983:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "949:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:41:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "949:41:18"
                }
              ]
            },
            "name": "abi_decode_available_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "709:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "714:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "722:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "730:5:18",
                "type": ""
              }
            ],
            "src": "653:343:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1064:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1086:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1073:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1064:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1129:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1102:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1102:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1102:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1032:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1040:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1048:5:18",
                "type": ""
              }
            ],
            "src": "1002:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:226:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1290:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1299:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1292:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1292:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1269:6:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1277:4:18",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1265:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1265:17:18"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1284:3:18"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1261:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1261:27:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1254:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1254:35:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1251:2:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1315:34:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1342:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1329:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:20:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1319:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1358:103:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1434:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1442:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1430:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1430:17:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1449:6:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1457:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1367:62:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:94:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1358:5:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1219:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1227:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1235:5:18",
                "type": ""
              }
            ],
            "src": "1164:303:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1533:77:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1543:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1558:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1552:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1543:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1598:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1574:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1574:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1574:30:18"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1511:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1519:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1527:5:18",
                "type": ""
              }
            ],
            "src": "1473:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1667:86:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1677:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1699:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1686:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1677:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1741:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "1715:25:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1715:32:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1715:32:18"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1645:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1653:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1661:5:18",
                "type": ""
              }
            ],
            "src": "1616:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:210:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1882:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1891:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1894:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1884:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1884:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1884:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1861:6:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1869:4:18",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1857:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1857:17:18"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1876:3:18"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1853:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1853:27:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1846:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1846:35:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1843:2:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1907:34:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1934:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1921:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:20:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1911:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1950:87:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2010:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2018:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2006:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2006:17:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2025:6:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2033:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1959:46:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:78:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1950:5:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1811:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1819:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1827:5:18",
                "type": ""
              }
            ],
            "src": "1772:271:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2101:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2111:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2133:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2120:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2120:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2111:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2176:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2149:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2149:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2149:33:18"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2079:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2087:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2095:5:18",
                "type": ""
              }
            ],
            "src": "2049:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:196:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2306:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2315:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2318:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2308:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2308:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2308:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2281:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2290:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2277:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2277:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2302:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2273:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2270:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2332:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2347:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2361:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2351:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2376:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2411:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2422:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2407:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2407:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2431:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2386:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2386:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2376:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2230:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2241:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2253:6:18",
                "type": ""
              }
            ],
            "src": "2194:262:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2655:1048:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2702:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2711:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2714:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2704:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2704:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2704:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2676:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2685:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2672:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2672:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2697:3:18",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2668:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:33:18"
                  },
                  "nodeType": "YulIf",
                  "src": "2665:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2728:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2743:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2757:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2747:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2772:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2807:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2818:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2803:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2803:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2827:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2782:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2782:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2772:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2855:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2870:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2884:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2874:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2900:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2935:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2946:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2931:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2931:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2955:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2910:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2910:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2900:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2983:236:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2998:46:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3029:9:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3040:2:18",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3025:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3025:18:18"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3012:12:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:32:18"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3002:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3091:16:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3100:1:18",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3103:1:18",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3093:6:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3093:12:18"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3093:12:18"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3063:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3071:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3060:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3060:30:18"
                      },
                      "nodeType": "YulIf",
                      "src": "3057:2:18"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3121:88:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3181:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3192:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3177:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3177:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3201:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3131:45:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3131:78:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3121:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3229:236:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3244:46:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3275:9:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3286:2:18",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3271:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3271:18:18"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3258:12:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:32:18"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3248:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3337:16:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3346:1:18",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3349:1:18",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3339:6:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3339:12:18"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3339:12:18"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3309:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3317:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3306:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3306:30:18"
                      },
                      "nodeType": "YulIf",
                      "src": "3303:2:18"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3367:88:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3427:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3438:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3423:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3423:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3447:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3377:45:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3377:78:18"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3367:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3475:221:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3490:47:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3521:9:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3532:3:18",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3517:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3517:19:18"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3504:12:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:33:18"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3494:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3584:16:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3593:1:18",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3596:1:18",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3586:6:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3586:12:18"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3586:12:18"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3556:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3564:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3553:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3553:30:18"
                      },
                      "nodeType": "YulIf",
                      "src": "3550:2:18"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3614:72:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3658:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3669:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3654:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3654:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3678:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3624:29:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3624:62:18"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3614:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2593:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2604:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2616:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2624:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2632:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2640:6:18",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2648:6:18",
                "type": ""
              }
            ],
            "src": "2462:1241:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3852:812:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3899:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3908:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3911:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3901:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3901:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3901:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3873:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3882:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3869:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3894:3:18",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3865:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:33:18"
                  },
                  "nodeType": "YulIf",
                  "src": "3862:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3925:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3940:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3954:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3944:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3969:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4004:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4015:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4000:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4000:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4024:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3979:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3979:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3969:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4052:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4067:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4081:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4071:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4097:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4132:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4143:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4128:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4128:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4152:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4107:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4107:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4097:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4180:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4195:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4209:2:18",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4199:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4225:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4260:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4271:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4256:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4256:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4280:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4235:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4225:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4308:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4323:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4337:2:18",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4327:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4353:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4388:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4399:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4384:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4384:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4408:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4363:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4363:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4353:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4436:221:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4451:47:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4482:9:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4493:3:18",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4478:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4478:19:18"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4465:12:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4465:33:18"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4455:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4545:16:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4554:1:18",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4557:1:18",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4547:6:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4547:12:18"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4547:12:18"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4517:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4525:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4514:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4514:30:18"
                      },
                      "nodeType": "YulIf",
                      "src": "4511:2:18"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4575:72:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4619:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4630:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4615:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4615:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4639:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4585:29:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4585:62:18"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4575:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3790:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3801:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3813:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3821:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3829:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3837:6:18",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3845:6:18",
                "type": ""
              }
            ],
            "src": "3709:955:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4838:968:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4885:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4894:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4897:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4887:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4887:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4887:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4859:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4868:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4855:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4855:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4880:3:18",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4851:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:33:18"
                  },
                  "nodeType": "YulIf",
                  "src": "4848:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4911:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4926:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4940:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4930:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4955:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4990:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5001:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4986:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4986:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5010:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4965:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4955:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5038:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5053:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5067:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5057:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5083:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5118:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5129:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5114:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5114:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5138:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5093:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5093:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5083:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5166:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5181:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5195:2:18",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5185:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5211:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5246:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5257:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5242:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5242:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5266:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5221:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5221:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5211:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5294:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5309:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5323:2:18",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5313:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5339:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5374:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5385:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5370:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5370:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5394:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5349:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5349:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5339:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5422:119:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5437:17:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5451:3:18",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5441:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5468:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5503:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5514:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5499:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5499:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5523:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5478:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5468:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5551:119:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5566:17:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5580:3:18",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5570:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5597:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5632:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5643:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5628:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5628:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5652:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5607:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5607:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "5597:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5680:119:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5695:17:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:3:18",
                        "type": "",
                        "value": "192"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5699:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5726:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5761:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5772:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5757:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5757:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5781:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5736:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "5726:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4760:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4771:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4783:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4791:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4799:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4807:6:18",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4815:6:18",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4823:6:18",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4831:6:18",
                "type": ""
              }
            ],
            "src": "4670:1136:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5895:324:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5941:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5950:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5953:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5943:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5943:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5943:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5916:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5925:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5912:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5912:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5937:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5908:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5908:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5905:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5967:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5982:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5996:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5986:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6011:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6046:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6057:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6042:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6042:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6066:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6021:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6021:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6011:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6094:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6109:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6123:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6113:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6139:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6174:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6185:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6170:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6170:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6194:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6149:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6149:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6139:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5857:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5868:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5880:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5888:6:18",
                "type": ""
              }
            ],
            "src": "5812:407:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6325:452:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6371:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6380:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6383:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6373:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6373:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6373:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6346:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6355:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6342:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6342:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6367:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6338:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6338:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "6335:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6397:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6412:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6426:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6416:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6441:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6476:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6487:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6472:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6472:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6496:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6451:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6451:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6441:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6524:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6539:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6553:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6543:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6569:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6604:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6615:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6600:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6600:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6624:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6579:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6579:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6569:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6652:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6667:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6681:2:18",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6671:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6697:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6732:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6743:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6728:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6728:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6752:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6707:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6697:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6279:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6290:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6302:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6310:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6318:6:18",
                "type": ""
              }
            ],
            "src": "6225:552:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6857:204:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6903:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6912:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6915:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6905:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6905:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6905:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6878:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6887:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6874:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6874:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6899:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6870:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6870:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "6867:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6929:125:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6944:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6958:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6948:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6973:71:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7016:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7027:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7012:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7012:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7036:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6983:28:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6983:61:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6973:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6827:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6838:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6850:6:18",
                "type": ""
              }
            ],
            "src": "6783:278:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7132:195:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7178:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7187:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7190:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7180:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7180:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7180:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7153:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7162:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7149:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7149:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7174:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7145:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7145:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "7142:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7204:116:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7219:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7233:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7223:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7248:62:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7282:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7293:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7278:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7278:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7302:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "7258:19:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7258:52:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7248:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7102:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7113:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7125:6:18",
                "type": ""
              }
            ],
            "src": "7067:260:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7399:196:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7445:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7454:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7457:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7447:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7447:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7447:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7420:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7429:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7416:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7416:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7441:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7412:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7412:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "7409:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7471:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7486:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7500:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7490:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7515:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7550:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7561:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7546:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7546:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7570:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7525:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7525:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7515:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7369:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7380:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7392:6:18",
                "type": ""
              }
            ],
            "src": "7333:262:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7684:324:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7730:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7739:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7742:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7732:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7732:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7732:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7705:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7714:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7701:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7701:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7726:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7697:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7697:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "7694:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7756:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7771:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7785:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7775:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7800:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7835:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7846:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7831:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7831:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7855:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7810:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7810:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7800:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7883:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7898:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7912:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7902:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7928:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7963:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7974:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7959:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7959:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7983:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7938:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7938:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7928:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7646:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7657:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7669:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7677:6:18",
                "type": ""
              }
            ],
            "src": "7601:407:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8079:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8096:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8119:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8101:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8101:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8089:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8089:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8089:37:18"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8067:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8074:3:18",
                "type": ""
              }
            ],
            "src": "8014:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8221:74:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8238:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8281:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8263:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8263:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8243:19:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8243:45:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8231:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8231:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8231:58:18"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8209:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8216:3:18",
                "type": ""
              }
            ],
            "src": "8138:157:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8360:50:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8377:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8397:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8382:14:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8382:21:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8370:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8370:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8370:34:18"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8348:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8355:3:18",
                "type": ""
              }
            ],
            "src": "8301:109:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8479:52:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8496:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8518:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "8501:16:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8501:23:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8489:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:36:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8489:36:18"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8467:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8474:3:18",
                "type": ""
              }
            ],
            "src": "8416:115:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8683:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8693:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8759:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8764:2:18",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8700:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8700:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8693:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8865:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
                      "nodeType": "YulIdentifier",
                      "src": "8776:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8776:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8776:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8878:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8889:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8894:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8885:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8885:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8878:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8671:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8679:3:18",
                "type": ""
              }
            ],
            "src": "8537:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9055:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9065:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9131:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9136:2:18",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9072:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9072:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9065:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9237:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
                      "nodeType": "YulIdentifier",
                      "src": "9148:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9148:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9148:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9250:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9261:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9266:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9257:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9257:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9250:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9043:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9051:3:18",
                "type": ""
              }
            ],
            "src": "8909:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9427:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9437:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9503:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9508:2:18",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9444:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9444:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9437:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9609:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
                      "nodeType": "YulIdentifier",
                      "src": "9520:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9520:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9520:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9622:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9633:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9638:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9629:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9622:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9415:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9423:3:18",
                "type": ""
              }
            ],
            "src": "9281:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9799:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9809:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9875:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9880:2:18",
                        "type": "",
                        "value": "71"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9816:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9809:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9981:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                      "nodeType": "YulIdentifier",
                      "src": "9892:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9892:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9892:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9994:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10005:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10010:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10001:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10001:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9994:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9787:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9795:3:18",
                "type": ""
              }
            ],
            "src": "9653:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10171:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10181:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10247:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10252:2:18",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10188:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10188:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10181:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10353:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
                      "nodeType": "YulIdentifier",
                      "src": "10264:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10264:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10264:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10366:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10377:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10382:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10373:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10366:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10159:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10167:3:18",
                "type": ""
              }
            ],
            "src": "10025:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10543:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10553:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10619:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10624:2:18",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10560:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10560:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10553:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10725:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                      "nodeType": "YulIdentifier",
                      "src": "10636:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10636:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10636:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10738:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10749:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10754:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10745:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10745:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10738:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10531:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10539:3:18",
                "type": ""
              }
            ],
            "src": "10397:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10915:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10925:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10991:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10996:2:18",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10932:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10932:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10925:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11097:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                      "nodeType": "YulIdentifier",
                      "src": "11008:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11008:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11008:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11110:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11121:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11126:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11117:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11117:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11110:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10903:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10911:3:18",
                "type": ""
              }
            ],
            "src": "10769:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11286:217:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11296:72:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11361:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11366:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11303:57:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11303:65:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11296:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11466:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nodeType": "YulIdentifier",
                      "src": "11377:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11377:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11377:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11479:18:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11490:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11495:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11486:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11486:11:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11479:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11274:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11282:3:18",
                "type": ""
              }
            ],
            "src": "11141:362:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11655:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11665:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11731:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11736:2:18",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11672:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11672:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11665:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11837:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
                      "nodeType": "YulIdentifier",
                      "src": "11748:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11748:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11748:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11850:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11861:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11866:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11857:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11857:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11850:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11643:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11651:3:18",
                "type": ""
              }
            ],
            "src": "11509:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12027:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12037:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12103:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12108:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12044:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12044:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12037:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12209:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                      "nodeType": "YulIdentifier",
                      "src": "12120:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12120:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12120:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12222:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12233:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12238:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12229:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12229:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12222:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12015:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12023:3:18",
                "type": ""
              }
            ],
            "src": "11881:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12399:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12409:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12475:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12480:2:18",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12416:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12416:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12409:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12581:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                      "nodeType": "YulIdentifier",
                      "src": "12492:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12492:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12492:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12594:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12605:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12610:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12601:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12601:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12594:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12387:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12395:3:18",
                "type": ""
              }
            ],
            "src": "12253:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12690:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12707:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12730:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12712:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12712:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12700:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12700:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12700:37:18"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12678:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12685:3:18",
                "type": ""
              }
            ],
            "src": "12625:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12832:74:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12849:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12892:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "12874:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12874:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "12854:19:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12854:45:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12842:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12842:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12842:58:18"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12820:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12827:3:18",
                "type": ""
              }
            ],
            "src": "12749:157:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13084:366:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13157:6:18"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13166:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13095:61:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13095:75:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13095:75:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13179:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13190:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13195:2:18",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13186:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13186:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13179:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13270:6:18"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13279:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13208:61:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13208:75:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13208:75:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13292:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13303:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13308:2:18",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13299:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13299:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13292:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13383:6:18"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13392:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13321:61:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13321:75:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13321:75:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13405:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13416:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13421:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13412:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13412:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13405:3:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13434:10:18",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13441:3:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13434:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13047:3:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13053:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13061:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13069:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13080:3:18",
                "type": ""
              }
            ],
            "src": "12912:538:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13554:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13564:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13576:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13587:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13572:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13572:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13564:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13644:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13657:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13668:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13653:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13653:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13600:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13600:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13600:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13526:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13538:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13549:4:18",
                "type": ""
              }
            ],
            "src": "13456:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13838:288:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13848:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13860:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13871:2:18",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13856:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13856:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13848:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13928:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13941:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13952:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13937:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13937:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13884:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13884:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13884:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14009:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14022:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14033:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14018:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14018:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13965:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13965:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13965:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14091:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14104:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14115:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14100:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14100:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14047:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14047:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14047:72:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13794:9:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13806:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13814:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13822:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13833:4:18",
                "type": ""
              }
            ],
            "src": "13684:442:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14414:577:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14424:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14436:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14447:3:18",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14432:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14432:19:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14424:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14505:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14518:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14529:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14514:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14514:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14461:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14461:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14461:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14586:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14599:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14610:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14595:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14595:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14542:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14542:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14542:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14668:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14681:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14692:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14677:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14677:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14624:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14624:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14624:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "14750:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14763:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14774:2:18",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14759:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14759:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14706:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14706:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14706:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14799:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14810:3:18",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14795:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14795:19:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14820:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14826:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14816:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14816:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14788:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14788:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14788:49:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14846:138:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14979:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14854:123:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14854:130:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14846:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14362:9:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "14374:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14382:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14390:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14398:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14409:4:18",
                "type": ""
              }
            ],
            "src": "14132:859:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15123:206:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15133:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15145:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15156:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15141:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15141:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15133:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15213:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15226:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15237:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15222:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15222:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15169:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15169:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15169:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15294:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15307:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15318:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15303:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15303:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15250:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15250:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15250:72:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15087:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15099:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15107:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15118:4:18",
                "type": ""
              }
            ],
            "src": "14997:332:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15427:118:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15437:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15449:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15460:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15445:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15445:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15437:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15511:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15524:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15535:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15520:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15520:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15473:37:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15473:65:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15473:65:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15399:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15411:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15422:4:18",
                "type": ""
              }
            ],
            "src": "15335:210:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15953:1031:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15963:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15975:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15986:3:18",
                        "type": "",
                        "value": "384"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15971:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15971:19:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15963:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16038:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16051:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16062:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16047:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16047:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16000:37:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16000:65:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16000:65:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "16119:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16132:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16143:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16128:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16128:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16075:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16075:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16075:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "16201:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16214:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16225:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16210:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16210:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16157:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16157:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16157:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "16283:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16296:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16307:2:18",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16292:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16292:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16239:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16239:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16239:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "16365:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16378:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16389:3:18",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16374:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16374:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16321:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16321:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16321:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "16448:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16461:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16472:3:18",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16457:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16457:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16404:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16404:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16404:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "16531:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16544:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16555:3:18",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16540:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16540:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16487:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16487:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16487:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "16614:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16627:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16638:3:18",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16623:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16623:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16570:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16570:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16570:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "16697:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16710:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16721:3:18",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16706:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16706:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16653:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16653:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16653:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "16780:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16793:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16804:3:18",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16789:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16789:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16736:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16736:73:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16736:73:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "16863:7:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16877:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16888:3:18",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16873:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16873:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16819:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16819:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16819:74:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value11",
                        "nodeType": "YulIdentifier",
                        "src": "16947:7:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16961:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16972:3:18",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16957:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16957:19:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16903:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16903:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16903:74:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15835:9:18",
                "type": ""
              },
              {
                "name": "value11",
                "nodeType": "YulTypedName",
                "src": "15847:7:18",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "15856:7:18",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "15865:6:18",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "15873:6:18",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "15881:6:18",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "15889:6:18",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "15897:6:18",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "15905:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "15913:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "15921:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15929:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15937:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15948:4:18",
                "type": ""
              }
            ],
            "src": "15551:1433:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17086:122:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17096:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17108:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17119:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17104:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17104:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17096:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17174:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17187:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17198:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17183:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17183:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17132:41:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17132:69:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17132:69:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17058:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17070:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17081:4:18",
                "type": ""
              }
            ],
            "src": "16990:218:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17385:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17395:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17407:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17418:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17403:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17403:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17395:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17442:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17453:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17438:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17438:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17461:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17467:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17457:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17457:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17431:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17431:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17431:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17487:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17621:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17495:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17495:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17487:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17365:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17380:4:18",
                "type": ""
              }
            ],
            "src": "17214:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17810:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17820:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17832:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17843:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17828:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17828:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17820:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17867:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17878:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17863:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17863:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17886:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17892:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17882:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17882:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17856:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17856:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17856:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17912:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18046:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17920:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17920:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17912:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17790:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17805:4:18",
                "type": ""
              }
            ],
            "src": "17639:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18235:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18245:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18257:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18268:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18253:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18253:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18245:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18292:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18303:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18288:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18288:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18311:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18317:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18307:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18307:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18281:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18281:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18281:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18337:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18471:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18345:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18345:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18337:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18215:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18230:4:18",
                "type": ""
              }
            ],
            "src": "18064:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18660:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18670:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18682:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18693:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18678:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18678:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18670:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18717:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18728:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18713:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18713:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18736:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18742:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18732:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18732:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18706:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18706:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18706:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18762:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18896:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18770:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18770:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18762:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18640:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18655:4:18",
                "type": ""
              }
            ],
            "src": "18489:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19085:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19095:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19107:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19118:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19103:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19103:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19095:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19142:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19153:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19138:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19138:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19161:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19167:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19157:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19157:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19131:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19131:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19131:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19187:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19321:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19195:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19195:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19187:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19065:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19080:4:18",
                "type": ""
              }
            ],
            "src": "18914:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19510:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19520:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19532:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19543:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19528:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19528:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19520:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19567:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19578:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19563:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19563:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19586:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19592:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19582:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19582:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19556:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19556:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19556:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19612:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19746:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19620:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19620:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19612:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19490:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19505:4:18",
                "type": ""
              }
            ],
            "src": "19339:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19935:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19945:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19957:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19968:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19953:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19953:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19945:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19992:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20003:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19988:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19988:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20011:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20017:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20007:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20007:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19981:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19981:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19981:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20037:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20171:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20045:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20045:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20037:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19915:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19930:4:18",
                "type": ""
              }
            ],
            "src": "19764:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20360:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20370:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20382:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20393:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20378:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20378:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20370:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20417:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20428:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20413:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20413:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20436:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20442:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20432:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20432:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20406:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20406:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20406:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20462:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20596:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20470:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20470:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20462:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20340:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20355:4:18",
                "type": ""
              }
            ],
            "src": "20189:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20785:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20795:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20807:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20818:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20803:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20803:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20795:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20842:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20853:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20838:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20838:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20861:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20867:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20857:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20857:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20831:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20831:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20831:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20887:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21021:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20895:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20895:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20887:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20765:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20780:4:18",
                "type": ""
              }
            ],
            "src": "20614:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21210:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21220:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21232:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21243:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21228:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21228:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21220:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21267:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21278:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21263:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21263:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21286:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21292:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21282:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21282:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21256:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21256:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21256:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21312:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21446:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21320:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21320:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21312:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21190:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21205:4:18",
                "type": ""
              }
            ],
            "src": "21039:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21562:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21572:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21584:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21595:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21580:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21580:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21572:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21652:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21665:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21676:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21661:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21661:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21608:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21608:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21608:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21534:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21546:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21557:4:18",
                "type": ""
              }
            ],
            "src": "21464:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21818:206:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21828:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21840:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21851:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21836:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21836:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21828:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "21908:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21921:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21932:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21917:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21917:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21864:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21864:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21864:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "21989:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22002:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22013:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21998:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21998:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21945:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21945:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21945:72:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21782:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "21794:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "21802:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21813:4:18",
                "type": ""
              }
            ],
            "src": "21692:332:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22071:88:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22081:30:18",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "22091:18:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22091:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "22081:6:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "22140:6:18"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "22148:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "22120:19:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22120:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22120:33:18"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "22055:4:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22064:6:18",
                "type": ""
              }
            ],
            "src": "22030:129:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22205:35:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22215:19:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22231:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "22225:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22225:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "22215:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22198:6:18",
                "type": ""
              }
            ],
            "src": "22165:75:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22328:229:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22433:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "22435:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22435:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22435:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22405:6:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22413:18:18",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22402:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22402:30:18"
                  },
                  "nodeType": "YulIf",
                  "src": "22399:2:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22465:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22477:6:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22485:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "22473:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22473:17:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "22465:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22527:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "22539:4:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22545:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22535:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22535:15:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "22527:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22312:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "22323:4:18",
                "type": ""
              }
            ],
            "src": "22246:311:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22629:241:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "22734:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "22736:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "22736:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "22736:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22706:6:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22714:18:18",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "22703:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22703:30:18"
                  },
                  "nodeType": "YulIf",
                  "src": "22700:2:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22766:37:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22796:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "22774:21:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22774:29:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "22766:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22840:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "22852:4:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22858:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22848:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22848:15:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "22840:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22613:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "22624:4:18",
                "type": ""
              }
            ],
            "src": "22563:307:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22971:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22988:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "22993:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22981:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22981:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22981:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23009:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23028:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23033:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23024:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23024:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "23009:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22943:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "22948:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "22959:11:18",
                "type": ""
              }
            ],
            "src": "22876:168:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23146:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23163:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "23168:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23156:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23156:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23156:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23184:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23203:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23208:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23199:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23199:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "23184:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23118:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "23123:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "23134:11:18",
                "type": ""
              }
            ],
            "src": "23050:169:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23269:261:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23279:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23302:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23284:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23284:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "23279:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23313:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23336:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23318:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23318:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "23313:1:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23476:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23478:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23478:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23478:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23397:1:18"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23404:66:18",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "23472:1:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23400:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23400:74:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "23394:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23394:81:18"
                  },
                  "nodeType": "YulIf",
                  "src": "23391:2:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23508:16:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23519:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23522:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23515:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23515:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "23508:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "23256:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "23259:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "23265:3:18",
                "type": ""
              }
            ],
            "src": "23225:305:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23581:146:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23591:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23614:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23596:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23596:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "23591:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23625:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23648:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "23630:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23630:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "23625:1:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "23672:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "23674:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "23674:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "23674:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23666:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23669:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "23663:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23663:8:18"
                  },
                  "nodeType": "YulIf",
                  "src": "23660:2:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23704:17:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "23716:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "23719:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "23712:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23712:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "23704:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "23567:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "23570:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "23576:4:18",
                "type": ""
              }
            ],
            "src": "23536:191:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23778:51:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23788:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "23817:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "23799:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23799:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "23788:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23760:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "23770:7:18",
                "type": ""
              }
            ],
            "src": "23733:96:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23877:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23887:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "23912:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "23905:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23905:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "23898:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23898:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "23887:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23859:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "23869:7:18",
                "type": ""
              }
            ],
            "src": "23835:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23975:105:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23985:89:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "24000:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24007:66:18",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "23996:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23996:78:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "23985:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "23957:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "23967:7:18",
                "type": ""
              }
            ],
            "src": "23931:149:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24131:81:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24141:65:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "24156:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24163:42:18",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "24152:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24152:54:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "24141:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "24113:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "24123:7:18",
                "type": ""
              }
            ],
            "src": "24086:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24263:32:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24273:16:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "24284:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "24273:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "24245:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "24255:7:18",
                "type": ""
              }
            ],
            "src": "24218:77:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24352:103:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "24375:3:18"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "24380:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "24385:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "24362:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24362:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24362:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "24433:3:18"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "24438:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24429:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24429:16:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24447:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24422:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24422:27:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24422:27:18"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "24334:3:18",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "24339:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "24344:6:18",
                "type": ""
              }
            ],
            "src": "24301:154:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24504:238:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "24514:58:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "24536:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "24566:4:18"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "24544:21:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24544:27:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24532:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24532:40:18"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "24518:10:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24683:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "24685:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24685:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24685:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "24626:10:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24638:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "24623:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24623:34:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "24662:10:18"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24674:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "24659:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24659:22:18"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "24620:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24620:62:18"
                  },
                  "nodeType": "YulIf",
                  "src": "24617:2:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24721:2:18",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "24725:10:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24714:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24714:22:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24714:22:18"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24490:6:18",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "24498:4:18",
                "type": ""
              }
            ],
            "src": "24461:281:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24795:53:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24805:37:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "24836:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "24816:19:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24816:26:18"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "24805:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "24777:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "24787:7:18",
                "type": ""
              }
            ],
            "src": "24748:100:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24901:47:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24911:31:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "24936:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "24922:13:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24922:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "24911:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "24883:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "24893:7:18",
                "type": ""
              }
            ],
            "src": "24854:94:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25001:32:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25011:16:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "25022:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "25011:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "24983:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "24993:7:18",
                "type": ""
              }
            ],
            "src": "24954:79:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25067:152:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25084:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25087:77:18",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25077:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25077:88:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25077:88:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25181:1:18",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25184:4:18",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25174:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25174:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25174:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25205:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25208:4:18",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "25198:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25198:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25198:15:18"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "25039:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25253:152:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25270:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25273:77:18",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25263:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25263:88:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25263:88:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25367:1:18",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25370:4:18",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25360:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25360:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25360:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25391:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25394:4:18",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "25384:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25384:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25384:15:18"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "25225:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25459:54:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25469:38:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "25487:5:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25494:2:18",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25483:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25483:14:18"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25503:2:18",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "25499:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25499:7:18"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "25479:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25479:28:18"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "25469:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "25442:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "25452:6:18",
                "type": ""
              }
            ],
            "src": "25411:102:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25561:52:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25571:35:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25596:2:18",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "25600:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "25592:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25592:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "25571:8:18"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "25542:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "25552:8:18",
                "type": ""
              }
            ],
            "src": "25519:94:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25725:124:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25747:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25755:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25743:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25743:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25759:34:18",
                        "type": "",
                        "value": "You have already issued bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25736:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25736:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25736:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25815:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25823:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25811:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25811:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25828:13:18",
                        "type": "",
                        "value": "r this loan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25804:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25804:38:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25804:38:18"
                }
              ]
            },
            "name": "store_literal_in_memory_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25717:6:18",
                "type": ""
              }
            ],
            "src": "25619:230:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25961:126:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25983:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25991:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25979:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25979:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25995:34:18",
                        "type": "",
                        "value": "Only the bond contract can call "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25972:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25972:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25972:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26051:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26059:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26047:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26047:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26064:15:18",
                        "type": "",
                        "value": "this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26040:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26040:40:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26040:40:18"
                }
              ]
            },
            "name": "store_literal_in_memory_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25953:6:18",
                "type": ""
              }
            ],
            "src": "25855:232:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26199:114:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26221:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26229:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26217:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26217:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26233:34:18",
                        "type": "",
                        "value": "You must make the minimum paymen"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26210:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26210:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26210:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26289:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26297:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26285:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26285:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26302:3:18",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26278:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26278:28:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26278:28:18"
                }
              ]
            },
            "name": "store_literal_in_memory_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26191:6:18",
                "type": ""
              }
            ],
            "src": "26093:220:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26425:189:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26447:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26455:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26443:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26443:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26459:34:18",
                        "type": "",
                        "value": "this loan has not been issued ye"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26436:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26436:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26436:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26515:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26523:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26511:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26511:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26528:34:18",
                        "type": "",
                        "value": "t. How do you even have bonds fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26504:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26504:59:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26504:59:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26584:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26592:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26580:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26580:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26597:9:18",
                        "type": "",
                        "value": "r it???"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26573:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26573:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26573:34:18"
                }
              ]
            },
            "name": "store_literal_in_memory_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26417:6:18",
                "type": ""
              }
            ],
            "src": "26319:295:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26726:114:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26748:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26756:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26744:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26744:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26760:34:18",
                        "type": "",
                        "value": "This contract is alreayd paid of"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26737:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26737:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26737:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26816:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26824:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26812:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26812:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26829:3:18",
                        "type": "",
                        "value": "f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26805:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26805:28:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26805:28:18"
                }
              ]
            },
            "name": "store_literal_in_memory_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26718:6:18",
                "type": ""
              }
            ],
            "src": "26620:220:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26952:117:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26974:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26982:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26970:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26970:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26986:34:18",
                        "type": "",
                        "value": "only the borrower can add collat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26963:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26963:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26963:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27042:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27050:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27038:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27038:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27055:6:18",
                        "type": "",
                        "value": "eral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27031:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27031:31:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27031:31:18"
                }
              ]
            },
            "name": "store_literal_in_memory_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26944:6:18",
                "type": ""
              }
            ],
            "src": "26846:223:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27181:139:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27203:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27211:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27199:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27199:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27215:34:18",
                        "type": "",
                        "value": "loan must be paid off or not sta"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27192:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27192:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27192:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27271:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27279:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27267:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27267:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27284:28:18",
                        "type": "",
                        "value": "rted to collect collateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27260:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27260:53:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27260:53:18"
                }
              ]
            },
            "name": "store_literal_in_memory_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27173:6:18",
                "type": ""
              }
            ],
            "src": "27075:245:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27432:8:18",
              "statements": []
            },
            "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27424:6:18",
                "type": ""
              }
            ],
            "src": "27326:114:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27552:134:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27574:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27582:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27570:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27570:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27586:34:18",
                        "type": "",
                        "value": "There is not enough payments ava"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27563:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27563:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27563:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27642:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27650:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27638:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27638:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27655:23:18",
                        "type": "",
                        "value": "ilable for collection"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27631:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27631:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27631:48:18"
                }
              ]
            },
            "name": "store_literal_in_memory_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27544:6:18",
                "type": ""
              }
            ],
            "src": "27446:240:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27798:145:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27820:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27828:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27816:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27816:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27832:34:18",
                        "type": "",
                        "value": "When increasing collateral, you "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27809:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27809:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27809:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27888:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27896:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27884:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27884:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27901:34:18",
                        "type": "",
                        "value": "must use the same ERC20 address "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27877:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27877:59:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27877:59:18"
                }
              ]
            },
            "name": "store_literal_in_memory_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27790:6:18",
                "type": ""
              }
            ],
            "src": "27692:251:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28055:121:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28077:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28085:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28073:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28073:14:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28089:34:18",
                        "type": "",
                        "value": "only the borrower can collect co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28066:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28066:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28066:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28145:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28153:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28141:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28141:15:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28158:10:18",
                        "type": "",
                        "value": "llateral"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28134:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28134:35:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28134:35:18"
                }
              ]
            },
            "name": "store_literal_in_memory_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28047:6:18",
                "type": ""
              }
            ],
            "src": "27949:227:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28225:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28282:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28291:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28294:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "28284:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28284:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28284:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28248:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28273:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "28255:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28255:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "28245:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28245:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "28238:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28238:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "28235:2:18"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28218:5:18",
                "type": ""
              }
            ],
            "src": "28182:122:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28350:76:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28404:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28413:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28416:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "28406:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28406:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28406:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28373:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28395:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "28380:14:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28380:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "28370:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28370:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "28363:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28363:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "28360:2:18"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28343:5:18",
                "type": ""
              }
            ],
            "src": "28310:116:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28474:78:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28530:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28539:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28542:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "28532:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28532:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28532:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28497:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28521:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "28504:16:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28504:23:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "28494:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28494:34:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "28487:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28487:42:18"
                  },
                  "nodeType": "YulIf",
                  "src": "28484:2:18"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28467:5:18",
                "type": ""
              }
            ],
            "src": "28432:120:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28601:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "28658:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28667:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "28670:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "28660:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "28660:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "28660:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "28624:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "28649:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "28631:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "28631:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "28621:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28621:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "28614:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28614:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "28611:2:18"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "28594:5:18",
                "type": ""
              }
            ],
            "src": "28558:122:18"
          }
        ]
      },
      "contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 71)\n        store_literal_in_memory_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 320))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value11,  add(headStart, 352))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_06b3772a5e321f5186dd42843396f07436e134c527fdd38261dbaa38e9abbfad(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already issued bonds fo\")\n\n        mstore(add(memPtr, 32), \"r this loan\")\n\n    }\n\n    function store_literal_in_memory_109dea39b67ff9110f5de17a1a5453e26b8a74f93262a44a2ccbb658bf5f54ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the bond contract can call \")\n\n        mstore(add(memPtr, 32), \"this function\")\n\n    }\n\n    function store_literal_in_memory_5e0d85eabd84102efaab3a2de2c3d5e6d1e929934ae8a9707f1eb6503a8d0f93(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must make the minimum paymen\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function store_literal_in_memory_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367(memPtr) {\n\n        mstore(add(memPtr, 0), \"this loan has not been issued ye\")\n\n        mstore(add(memPtr, 32), \"t. How do you even have bonds fo\")\n\n        mstore(add(memPtr, 64), \"r it???\")\n\n    }\n\n    function store_literal_in_memory_901ed4ab99caebd6f1eeec1a53e84d6f4cd7a2a70ed0e1d96255ef6a90e2c6eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"This contract is alreayd paid of\")\n\n        mstore(add(memPtr, 32), \"f\")\n\n    }\n\n    function store_literal_in_memory_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only the borrower can add collat\")\n\n        mstore(add(memPtr, 32), \"eral\")\n\n    }\n\n    function store_literal_in_memory_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425(memPtr) {\n\n        mstore(add(memPtr, 0), \"loan must be paid off or not sta\")\n\n        mstore(add(memPtr, 32), \"rted to collect collateral\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"There is not enough payments ava\")\n\n        mstore(add(memPtr, 32), \"ilable for collection\")\n\n    }\n\n    function store_literal_in_memory_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"When increasing collateral, you \")\n\n        mstore(add(memPtr, 32), \"must use the same ERC20 address \")\n\n    }\n\n    function store_literal_in_memory_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"only the borrower can collect co\")\n\n        mstore(add(memPtr, 32), \"llateral\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "342:3341:1:-:0;;;758:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;807:6;1560::2;1545:12;;:21;;;;;;;;;;;;;;;;;;1508:65;758:58:1;342:3341;;7:143:18;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;342:3341:1:-;;;;;;;",
  "deployedSourceMap": "342:3341:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:233:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6895:879:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8788:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:54:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1930:437;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1369:44:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3971:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1321:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2166:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4396:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2690:991:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;358:201:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9223:264:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:672:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2601:286:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3502:257;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5475:1096;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;179:173:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:233:11;414:4;452:34;437:49;;;:11;:49;;;;:101;;;;502:36;526:11;502:23;:36::i;:::-;437:101;430:108;;312:233;;;:::o;6895:879:2:-;6990:3;1933:10;:15;1944:3;1933:15;;;;;;;;;;;:34;;;1891:10;:15;1902:3;1891:15;;;;;;;;;;;:31;;;:76;1883:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;7009:14:::1;7026:10;:15;7037:3;7026:15;;;;;;;;;;;7009:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7076:2;:13;;;7059;:30;;:182;;;;7228:2;:13;;;7207:2;:18;;;7183:2;:21;;;:42;;;;:::i;:::-;:58;7059:182;7051:293;;;;;;;;;;;;:::i;:::-;;;;;;;;;7378:2;:15;;;7371:36;;;7408:10;7428:4;7435:13;7371:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7502:13;7464:10;:15;7475:3;7464:15;;;;;;;;;;;:34;;;:51;;;;;;;:::i;:::-;;;;;;;;7601:2;:16;;;7583:15;:34;;;;:::i;:::-;7550:10;:15;7561:3;7550:15;;;;;;;;;;;:30;;:67;;;;7696:13;7661:10;:15;7672:3;7661:15;;;;;;;;;;;:31;;;:48;;;;;;;:::i;:::-;;;;;;;;2023:1;6895:879:::0;;;:::o;8788:202::-;8849:4;8914:10;:15;8925:3;8914:15;;;;;;;;;;;:34;;;8871:10;:15;8882:3;8871:15;;;;;;;;;;;:31;;;:77;;:112;;;;8961:10;:15;8972:3;8961:15;;;;;;;;;;;:22;;;;;;;;;;;;8960:23;8871:112;8864:119;;8788:202;;;:::o;555:54:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1930:437::-;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:28;;;;;;;;;;;;1999:42;;:10;:42;;;1991:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2104:19;2115:7;2104:10;:19::i;:::-;:50;;;;2128:10;:19;2139:7;2128:19;;;;;;;;;;;:26;;;;;;;;;;;;2127:27;2104:50;2096:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2227:12;2249:16;:25;2266:7;2249:25;;;;;;;;;;;:39;;;;;;;;;;;;2227:62;;2299:5;:14;;;2314:10;2326:16;:25;2343:7;2326:25;;;;;;;;;;;:33;;;2299:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1930:437;;:::o;1369:44:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3971:132::-;4035:7;4060:10;:15;4071:3;4060:15;;;;;;;;;;;:35;;;4053:43;;3971:132;;;:::o;1321:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2166:122::-;2236:7;2261;:13;2269:4;2261:13;;;;;;;;;;;;;;;:20;;;;2254:27;;2166:122;;;:::o;4396:163::-;4459:4;4501:10;:15;4512:3;4501:15;;;;;;;;;;;:30;;;4482:15;:49;;:69;;;;;4536:15;4547:3;4536:10;:15::i;:::-;4535:16;4482:69;4474:78;;4396:163;;;:::o;2690:991:1:-;2763:16;2791:12;;;;;;;;;;;2763:41;;2814:12;2836:10;:15;2847:3;2836:15;;;;;;;;;;;:28;;;;;;;;;;;;2814:51;;2875:10;2895:16;:21;2912:3;2895:21;;;;;;;;;;;:35;;;;;;;;;;;;2875:56;;2949:10;:15;2960:3;2949:15;;;;;;;;;;;:22;;;;;;;;;;;;2941:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3073:10;:15;3084:3;3073:15;;;;;;;;;;;:34;;;3065:4;:42;;3057:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;3174:7;:24;;;3199:10;3219:4;3226:3;3231:4;3174:66;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3250:5;:14;;;3265:10;3277:4;3250:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3295:17;3308:3;3295:12;:17::i;:::-;:54;;;;;3348:1;3316:16;:21;3333:3;3316:21;;;;;;;;;;;:29;;;:33;;3295:54;3292:383;;;3399:4;3367:16;:21;3384:3;3367:21;;;;;;;;;;;:29;;;:36;3364:301;;;3454:1;3422:16;:21;3439:3;3422:21;;;;;;;;;;;:29;;:33;;;;3473:3;:12;;;3486:10;3498:16;:21;3515:3;3498:21;;;;;;;;;;;:29;;;3473:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3364:301;;;3598:4;3565:16;:21;3582:3;3565:21;;;;;;;;;;;:29;;;:37;;;;;;;:::i;:::-;;;;;;;;3620:3;:12;;;3633:10;3645:4;3620:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3364:301;3292:383;2690:991;;;;;:::o;358:201:10:-;491:6;516:36;;;509:43;;358:201;;;;;;;:::o;9223:264:2:-;9301:7;9319:10;9401:4;9420:9;9443:6;9363:96;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9353:107;;;;;;9332:129;;9319:142;;9478:2;9471:9;;;9223:264;;;;:::o;1141:672:1:-;1281:10;1249:42;;:10;:19;1260:7;1249:19;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;1241:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1342:12;1364:14;1342:37;;1429:1;1392:16;:25;1409:7;1392:25;;;;;;;;;;;:33;;;:38;1389:353;;;1473:36;;;;;;;;1484:14;1473:36;;;;;;1500:8;1473:36;;;1445:16;:25;1462:7;1445:25;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:353;;;1564:16;:25;1581:7;1564:25;;;;;;;;;;;:39;;;;;;;;;;;;1546:57;;:14;:57;;;1538:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:8;1686:16;:25;1703:7;1686:25;;;;;;;;;;;:33;;;:45;;;;;;;:::i;:::-;;;;;;;;1389:353;1751:5;:18;;;1770:10;1790:4;1797:8;1751:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1141:672;;;;:::o;2601:286:2:-;2669:7;2677;1701:12;;;;;;;;;;1687:26;;:10;:26;;;1679:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;2704:10:::1;:15;2715:3;2704:15;;;;;;;;;;;:22;;;;;;;;;;;;2703:23;2695:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2808:4;2783:10:::0;:15:::1;2794:3;2783:15;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;2829:10;:15;2840:3;2829:15;;;;;;;;;;;:25;;;2855:10;:15;2866:3;2855:15;;;;;;;;;;;:24;;;;;;;;;;;;2822:58;;;;2601:286:::0;;;:::o;3502:257::-;3585:4;1701:12;;;;;;;;;;;1687:26;;:10;:26;;;1679:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;3604:15:::1;3615:3;3604:10;:15::i;:::-;3600:153;;3672:4;3634:10;:15;3645:3;3634:15;;;;;;;;;;;:34;;;:42;;;;;;;:::i;:::-;;;;;;;;3697:4;3690:11;;;;3600:153;3737:5;3730:12;;1773:1;3502:257:::0;;;;:::o;700:27::-;;;;;;;;;;;;:::o;5475:1096::-;5726:7;5786:10;5799:43;5805:9;5816:7;:18;5824:9;5816:18;;;;;;;;;;;;;;;:25;;;;5799:5;:43::i;:::-;5786:56;;5879:7;:18;5887:9;5879:18;;;;;;;;;;;;;;;5903:2;5879:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5967:578;;;;;;;;6003:5;5967:578;;;;;;6036:6;5967:578;;;;;;6066:10;5967:578;;;;;;6105:14;5967:578;;;;6167:14;6149:15;:32;;;;:::i;:::-;5967:578;;;;6207:11;5967:578;;;;6253:20;5967:578;;;;6302:14;5967:578;;;;6341:10;5967:578;;;;6385:10;5967:578;;;;6488:1;5967:578;;;;6520:1;5967:578;;;5950:10;:14;5961:2;5950:14;;;;;;;;;;;:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6562:2;6555:9;;;5475:1096;;;;;;;;;:::o;179:173:10:-;289:6;314:31;;;307:38;;179:173;;;;;;;:::o;763:155:16:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;24:623:18:-;;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;274:6;267:5;260:21;300:4;293:5;289:16;282:23;;325:6;375:3;367:4;359:6;355:17;350:3;346:27;343:36;340:2;;;392:1;389;382:12;340:2;420:1;405:236;430:6;427:1;424:13;405:236;;;497:3;525:37;558:3;546:10;525:37;:::i;:::-;520:3;513:50;592:4;587:3;583:14;576:21;;626:4;621:3;617:14;610:21;;465:176;452:1;449;445:9;440:14;;405:236;;;409:14;126:521;;;;;;;:::o;653:343::-;;755:65;771:48;812:6;771:48;:::i;:::-;755:65;:::i;:::-;746:74;;843:6;836:5;829:21;881:4;874:5;870:16;919:3;910:6;905:3;901:16;898:25;895:2;;;936:1;933;926:12;895:2;949:41;983:6;978:3;973;949:41;:::i;:::-;736:260;;;;;;:::o;1002:139::-;;1086:6;1073:20;1064:29;;1102:33;1129:5;1102:33;:::i;:::-;1054:87;;;;:::o;1164:303::-;;1284:3;1277:4;1269:6;1265:17;1261:27;1251:2;;1302:1;1299;1292:12;1251:2;1342:6;1329:20;1367:94;1457:3;1449:6;1442:4;1434:6;1430:17;1367:94;:::i;:::-;1358:103;;1241:226;;;;;:::o;1473:137::-;;1558:6;1552:13;1543:22;;1574:30;1598:5;1574:30;:::i;:::-;1533:77;;;;:::o;1616:137::-;;1699:6;1686:20;1677:29;;1715:32;1741:5;1715:32;:::i;:::-;1667:86;;;;:::o;1772:271::-;;1876:3;1869:4;1861:6;1857:17;1853:27;1843:2;;1894:1;1891;1884:12;1843:2;1934:6;1921:20;1959:78;2033:3;2025:6;2018:4;2010:6;2006:17;1959:78;:::i;:::-;1950:87;;1833:210;;;;;:::o;2049:139::-;;2133:6;2120:20;2111:29;;2149:33;2176:5;2149:33;:::i;:::-;2101:87;;;;:::o;2194:262::-;;2302:2;2290:9;2281:7;2277:23;2273:32;2270:2;;;2318:1;2315;2308:12;2270:2;2361:1;2386:53;2431:7;2422:6;2411:9;2407:22;2386:53;:::i;:::-;2376:63;;2332:117;2260:196;;;;:::o;2462:1241::-;;;;;;2697:3;2685:9;2676:7;2672:23;2668:33;2665:2;;;2714:1;2711;2704:12;2665:2;2757:1;2782:53;2827:7;2818:6;2807:9;2803:22;2782:53;:::i;:::-;2772:63;;2728:117;2884:2;2910:53;2955:7;2946:6;2935:9;2931:22;2910:53;:::i;:::-;2900:63;;2855:118;3040:2;3029:9;3025:18;3012:32;3071:18;3063:6;3060:30;3057:2;;;3103:1;3100;3093:12;3057:2;3131:78;3201:7;3192:6;3181:9;3177:22;3131:78;:::i;:::-;3121:88;;2983:236;3286:2;3275:9;3271:18;3258:32;3317:18;3309:6;3306:30;3303:2;;;3349:1;3346;3339:12;3303:2;3377:78;3447:7;3438:6;3427:9;3423:22;3377:78;:::i;:::-;3367:88;;3229:236;3532:3;3521:9;3517:19;3504:33;3564:18;3556:6;3553:30;3550:2;;;3596:1;3593;3586:12;3550:2;3624:62;3678:7;3669:6;3658:9;3654:22;3624:62;:::i;:::-;3614:72;;3475:221;2655:1048;;;;;;;;:::o;3709:955::-;;;;;;3894:3;3882:9;3873:7;3869:23;3865:33;3862:2;;;3911:1;3908;3901:12;3862:2;3954:1;3979:53;4024:7;4015:6;4004:9;4000:22;3979:53;:::i;:::-;3969:63;;3925:117;4081:2;4107:53;4152:7;4143:6;4132:9;4128:22;4107:53;:::i;:::-;4097:63;;4052:118;4209:2;4235:53;4280:7;4271:6;4260:9;4256:22;4235:53;:::i;:::-;4225:63;;4180:118;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;4493:3;4482:9;4478:19;4465:33;4525:18;4517:6;4514:30;4511:2;;;4557:1;4554;4547:12;4511:2;4585:62;4639:7;4630:6;4619:9;4615:22;4585:62;:::i;:::-;4575:72;;4436:221;3852:812;;;;;;;;:::o;4670:1136::-;;;;;;;;4880:3;4868:9;4859:7;4855:23;4851:33;4848:2;;;4897:1;4894;4887:12;4848:2;4940:1;4965:53;5010:7;5001:6;4990:9;4986:22;4965:53;:::i;:::-;4955:63;;4911:117;5067:2;5093:53;5138:7;5129:6;5118:9;5114:22;5093:53;:::i;:::-;5083:63;;5038:118;5195:2;5221:53;5266:7;5257:6;5246:9;5242:22;5221:53;:::i;:::-;5211:63;;5166:118;5323:2;5349:53;5394:7;5385:6;5374:9;5370:22;5349:53;:::i;:::-;5339:63;;5294:118;5451:3;5478:53;5523:7;5514:6;5503:9;5499:22;5478:53;:::i;:::-;5468:63;;5422:119;5580:3;5607:53;5652:7;5643:6;5632:9;5628:22;5607:53;:::i;:::-;5597:63;;5551:119;5709:3;5736:53;5781:7;5772:6;5761:9;5757:22;5736:53;:::i;:::-;5726:63;;5680:119;4838:968;;;;;;;;;;:::o;5812:407::-;;;5937:2;5925:9;5916:7;5912:23;5908:32;5905:2;;;5953:1;5950;5943:12;5905:2;5996:1;6021:53;6066:7;6057:6;6046:9;6042:22;6021:53;:::i;:::-;6011:63;;5967:117;6123:2;6149:53;6194:7;6185:6;6174:9;6170:22;6149:53;:::i;:::-;6139:63;;6094:118;5895:324;;;;;:::o;6225:552::-;;;;6367:2;6355:9;6346:7;6342:23;6338:32;6335:2;;;6383:1;6380;6373:12;6335:2;6426:1;6451:53;6496:7;6487:6;6476:9;6472:22;6451:53;:::i;:::-;6441:63;;6397:117;6553:2;6579:53;6624:7;6615:6;6604:9;6600:22;6579:53;:::i;:::-;6569:63;;6524:118;6681:2;6707:53;6752:7;6743:6;6732:9;6728:22;6707:53;:::i;:::-;6697:63;;6652:118;6325:452;;;;;:::o;6783:278::-;;6899:2;6887:9;6878:7;6874:23;6870:32;6867:2;;;6915:1;6912;6905:12;6867:2;6958:1;6983:61;7036:7;7027:6;7016:9;7012:22;6983:61;:::i;:::-;6973:71;;6929:125;6857:204;;;;:::o;7067:260::-;;7174:2;7162:9;7153:7;7149:23;7145:32;7142:2;;;7190:1;7187;7180:12;7142:2;7233:1;7258:52;7302:7;7293:6;7282:9;7278:22;7258:52;:::i;:::-;7248:62;;7204:116;7132:195;;;;:::o;7333:262::-;;7441:2;7429:9;7420:7;7416:23;7412:32;7409:2;;;7457:1;7454;7447:12;7409:2;7500:1;7525:53;7570:7;7561:6;7550:9;7546:22;7525:53;:::i;:::-;7515:63;;7471:117;7399:196;;;;:::o;7601:407::-;;;7726:2;7714:9;7705:7;7701:23;7697:32;7694:2;;;7742:1;7739;7732:12;7694:2;7785:1;7810:53;7855:7;7846:6;7835:9;7831:22;7810:53;:::i;:::-;7800:63;;7756:117;7912:2;7938:53;7983:7;7974:6;7963:9;7959:22;7938:53;:::i;:::-;7928:63;;7883:118;7684:324;;;;;:::o;8014:118::-;8101:24;8119:5;8101:24;:::i;:::-;8096:3;8089:37;8079:53;;:::o;8138:157::-;8243:45;8263:24;8281:5;8263:24;:::i;:::-;8243:45;:::i;:::-;8238:3;8231:58;8221:74;;:::o;8301:109::-;8382:21;8397:5;8382:21;:::i;:::-;8377:3;8370:34;8360:50;;:::o;8416:115::-;8501:23;8518:5;8501:23;:::i;:::-;8496:3;8489:36;8479:52;;:::o;8537:366::-;;8700:67;8764:2;8759:3;8700:67;:::i;:::-;8693:74;;8776:93;8865:3;8776:93;:::i;:::-;8894:2;8889:3;8885:12;8878:19;;8683:220;;;:::o;8909:366::-;;9072:67;9136:2;9131:3;9072:67;:::i;:::-;9065:74;;9148:93;9237:3;9148:93;:::i;:::-;9266:2;9261:3;9257:12;9250:19;;9055:220;;;:::o;9281:366::-;;9444:67;9508:2;9503:3;9444:67;:::i;:::-;9437:74;;9520:93;9609:3;9520:93;:::i;:::-;9638:2;9633:3;9629:12;9622:19;;9427:220;;;:::o;9653:366::-;;9816:67;9880:2;9875:3;9816:67;:::i;:::-;9809:74;;9892:93;9981:3;9892:93;:::i;:::-;10010:2;10005:3;10001:12;9994:19;;9799:220;;;:::o;10025:366::-;;10188:67;10252:2;10247:3;10188:67;:::i;:::-;10181:74;;10264:93;10353:3;10264:93;:::i;:::-;10382:2;10377:3;10373:12;10366:19;;10171:220;;;:::o;10397:366::-;;10560:67;10624:2;10619:3;10560:67;:::i;:::-;10553:74;;10636:93;10725:3;10636:93;:::i;:::-;10754:2;10749:3;10745:12;10738:19;;10543:220;;;:::o;10769:366::-;;10932:67;10996:2;10991:3;10932:67;:::i;:::-;10925:74;;11008:93;11097:3;11008:93;:::i;:::-;11126:2;11121:3;11117:12;11110:19;;10915:220;;;:::o;11141:362::-;;11303:65;11366:1;11361:3;11303:65;:::i;:::-;11296:72;;11377:93;11466:3;11377:93;:::i;:::-;11495:1;11490:3;11486:11;11479:18;;11286:217;;;:::o;11509:366::-;;11672:67;11736:2;11731:3;11672:67;:::i;:::-;11665:74;;11748:93;11837:3;11748:93;:::i;:::-;11866:2;11861:3;11857:12;11850:19;;11655:220;;;:::o;11881:366::-;;12044:67;12108:2;12103:3;12044:67;:::i;:::-;12037:74;;12120:93;12209:3;12120:93;:::i;:::-;12238:2;12233:3;12229:12;12222:19;;12027:220;;;:::o;12253:366::-;;12416:67;12480:2;12475:3;12416:67;:::i;:::-;12409:74;;12492:93;12581:3;12492:93;:::i;:::-;12610:2;12605:3;12601:12;12594:19;;12399:220;;;:::o;12625:118::-;12712:24;12730:5;12712:24;:::i;:::-;12707:3;12700:37;12690:53;;:::o;12749:157::-;12854:45;12874:24;12892:5;12874:24;:::i;:::-;12854:45;:::i;:::-;12849:3;12842:58;12832:74;;:::o;12912:538::-;;13095:75;13166:3;13157:6;13095:75;:::i;:::-;13195:2;13190:3;13186:12;13179:19;;13208:75;13279:3;13270:6;13208:75;:::i;:::-;13308:2;13303:3;13299:12;13292:19;;13321:75;13392:3;13383:6;13321:75;:::i;:::-;13421:2;13416:3;13412:12;13405:19;;13441:3;13434:10;;13084:366;;;;;;:::o;13456:222::-;;13587:2;13576:9;13572:18;13564:26;;13600:71;13668:1;13657:9;13653:17;13644:6;13600:71;:::i;:::-;13554:124;;;;:::o;13684:442::-;;13871:2;13860:9;13856:18;13848:26;;13884:71;13952:1;13941:9;13937:17;13928:6;13884:71;:::i;:::-;13965:72;14033:2;14022:9;14018:18;14009:6;13965:72;:::i;:::-;14047;14115:2;14104:9;14100:18;14091:6;14047:72;:::i;:::-;13838:288;;;;;;:::o;14132:859::-;;14447:3;14436:9;14432:19;14424:27;;14461:71;14529:1;14518:9;14514:17;14505:6;14461:71;:::i;:::-;14542:72;14610:2;14599:9;14595:18;14586:6;14542:72;:::i;:::-;14624;14692:2;14681:9;14677:18;14668:6;14624:72;:::i;:::-;14706;14774:2;14763:9;14759:18;14750:6;14706:72;:::i;:::-;14826:9;14820:4;14816:20;14810:3;14799:9;14795:19;14788:49;14854:130;14979:4;14854:130;:::i;:::-;14846:138;;14414:577;;;;;;;:::o;14997:332::-;;15156:2;15145:9;15141:18;15133:26;;15169:71;15237:1;15226:9;15222:17;15213:6;15169:71;:::i;:::-;15250:72;15318:2;15307:9;15303:18;15294:6;15250:72;:::i;:::-;15123:206;;;;;:::o;15335:210::-;;15460:2;15449:9;15445:18;15437:26;;15473:65;15535:1;15524:9;15520:17;15511:6;15473:65;:::i;:::-;15427:118;;;;:::o;15551:1433::-;;15986:3;15975:9;15971:19;15963:27;;16000:65;16062:1;16051:9;16047:17;16038:6;16000:65;:::i;:::-;16075:72;16143:2;16132:9;16128:18;16119:6;16075:72;:::i;:::-;16157;16225:2;16214:9;16210:18;16201:6;16157:72;:::i;:::-;16239;16307:2;16296:9;16292:18;16283:6;16239:72;:::i;:::-;16321:73;16389:3;16378:9;16374:19;16365:6;16321:73;:::i;:::-;16404;16472:3;16461:9;16457:19;16448:6;16404:73;:::i;:::-;16487;16555:3;16544:9;16540:19;16531:6;16487:73;:::i;:::-;16570;16638:3;16627:9;16623:19;16614:6;16570:73;:::i;:::-;16653;16721:3;16710:9;16706:19;16697:6;16653:73;:::i;:::-;16736;16804:3;16793:9;16789:19;16780:6;16736:73;:::i;:::-;16819:74;16888:3;16877:9;16873:19;16863:7;16819:74;:::i;:::-;16903;16972:3;16961:9;16957:19;16947:7;16903:74;:::i;:::-;15953:1031;;;;;;;;;;;;;;;:::o;16990:218::-;;17119:2;17108:9;17104:18;17096:26;;17132:69;17198:1;17187:9;17183:17;17174:6;17132:69;:::i;:::-;17086:122;;;;:::o;17214:419::-;;17418:2;17407:9;17403:18;17395:26;;17467:9;17461:4;17457:20;17453:1;17442:9;17438:17;17431:47;17495:131;17621:4;17495:131;:::i;:::-;17487:139;;17385:248;;;:::o;17639:419::-;;17843:2;17832:9;17828:18;17820:26;;17892:9;17886:4;17882:20;17878:1;17867:9;17863:17;17856:47;17920:131;18046:4;17920:131;:::i;:::-;17912:139;;17810:248;;;:::o;18064:419::-;;18268:2;18257:9;18253:18;18245:26;;18317:9;18311:4;18307:20;18303:1;18292:9;18288:17;18281:47;18345:131;18471:4;18345:131;:::i;:::-;18337:139;;18235:248;;;:::o;18489:419::-;;18693:2;18682:9;18678:18;18670:26;;18742:9;18736:4;18732:20;18728:1;18717:9;18713:17;18706:47;18770:131;18896:4;18770:131;:::i;:::-;18762:139;;18660:248;;;:::o;18914:419::-;;19118:2;19107:9;19103:18;19095:26;;19167:9;19161:4;19157:20;19153:1;19142:9;19138:17;19131:47;19195:131;19321:4;19195:131;:::i;:::-;19187:139;;19085:248;;;:::o;19339:419::-;;19543:2;19532:9;19528:18;19520:26;;19592:9;19586:4;19582:20;19578:1;19567:9;19563:17;19556:47;19620:131;19746:4;19620:131;:::i;:::-;19612:139;;19510:248;;;:::o;19764:419::-;;19968:2;19957:9;19953:18;19945:26;;20017:9;20011:4;20007:20;20003:1;19992:9;19988:17;19981:47;20045:131;20171:4;20045:131;:::i;:::-;20037:139;;19935:248;;;:::o;20189:419::-;;20393:2;20382:9;20378:18;20370:26;;20442:9;20436:4;20432:20;20428:1;20417:9;20413:17;20406:47;20470:131;20596:4;20470:131;:::i;:::-;20462:139;;20360:248;;;:::o;20614:419::-;;20818:2;20807:9;20803:18;20795:26;;20867:9;20861:4;20857:20;20853:1;20842:9;20838:17;20831:47;20895:131;21021:4;20895:131;:::i;:::-;20887:139;;20785:248;;;:::o;21039:419::-;;21243:2;21232:9;21228:18;21220:26;;21292:9;21286:4;21282:20;21278:1;21267:9;21263:17;21256:47;21320:131;21446:4;21320:131;:::i;:::-;21312:139;;21210:248;;;:::o;21464:222::-;;21595:2;21584:9;21580:18;21572:26;;21608:71;21676:1;21665:9;21661:17;21652:6;21608:71;:::i;:::-;21562:124;;;;:::o;21692:332::-;;21851:2;21840:9;21836:18;21828:26;;21864:71;21932:1;21921:9;21917:17;21908:6;21864:71;:::i;:::-;21945:72;22013:2;22002:9;21998:18;21989:6;21945:72;:::i;:::-;21818:206;;;;;:::o;22030:129::-;;22091:20;;:::i;:::-;22081:30;;22120:33;22148:4;22140:6;22120:33;:::i;:::-;22071:88;;;:::o;22165:75::-;;22231:2;22225:9;22215:19;;22205:35;:::o;22246:311::-;;22413:18;22405:6;22402:30;22399:2;;;22435:18;;:::i;:::-;22399:2;22485:4;22477:6;22473:17;22465:25;;22545:4;22539;22535:15;22527:23;;22328:229;;;:::o;22563:307::-;;22714:18;22706:6;22703:30;22700:2;;;22736:18;;:::i;:::-;22700:2;22774:29;22796:6;22774:29;:::i;:::-;22766:37;;22858:4;22852;22848:15;22840:23;;22629:241;;;:::o;22876:168::-;;22993:6;22988:3;22981:19;23033:4;23028:3;23024:14;23009:29;;22971:73;;;;:::o;23050:169::-;;23168:6;23163:3;23156:19;23208:4;23203:3;23199:14;23184:29;;23146:73;;;;:::o;23225:305::-;;23284:20;23302:1;23284:20;:::i;:::-;23279:25;;23318:20;23336:1;23318:20;:::i;:::-;23313:25;;23472:1;23404:66;23400:74;23397:1;23394:81;23391:2;;;23478:18;;:::i;:::-;23391:2;23522:1;23519;23515:9;23508:16;;23269:261;;;;:::o;23536:191::-;;23596:20;23614:1;23596:20;:::i;:::-;23591:25;;23630:20;23648:1;23630:20;:::i;:::-;23625:25;;23669:1;23666;23663:8;23660:2;;;23674:18;;:::i;:::-;23660:2;23719:1;23716;23712:9;23704:17;;23581:146;;;;:::o;23733:96::-;;23799:24;23817:5;23799:24;:::i;:::-;23788:35;;23778:51;;;:::o;23835:90::-;;23912:5;23905:13;23898:21;23887:32;;23877:48;;;:::o;23931:149::-;;24007:66;24000:5;23996:78;23985:89;;23975:105;;;:::o;24086:126::-;;24163:42;24156:5;24152:54;24141:65;;24131:81;;;:::o;24218:77::-;;24284:5;24273:16;;24263:32;;;:::o;24301:154::-;24385:6;24380:3;24375;24362:30;24447:1;24438:6;24433:3;24429:16;24422:27;24352:103;;;:::o;24461:281::-;24544:27;24566:4;24544:27;:::i;:::-;24536:6;24532:40;24674:6;24662:10;24659:22;24638:18;24626:10;24623:34;24620:62;24617:2;;;24685:18;;:::i;:::-;24617:2;24725:10;24721:2;24714:22;24504:238;;;:::o;24748:100::-;;24816:26;24836:5;24816:26;:::i;:::-;24805:37;;24795:53;;;:::o;24854:94::-;;24922:20;24936:5;24922:20;:::i;:::-;24911:31;;24901:47;;;:::o;24954:79::-;;25022:5;25011:16;;25001:32;;;:::o;25039:180::-;25087:77;25084:1;25077:88;25184:4;25181:1;25174:15;25208:4;25205:1;25198:15;25225:180;25273:77;25270:1;25263:88;25370:4;25367:1;25360:15;25394:4;25391:1;25384:15;25411:102;;25503:2;25499:7;25494:2;25487:5;25483:14;25479:28;25469:38;;25459:54;;;:::o;25519:94::-;;25600:5;25596:2;25592:14;25571:35;;25561:52;;;:::o;25619:230::-;25759:34;25755:1;25747:6;25743:14;25736:58;25828:13;25823:2;25815:6;25811:15;25804:38;25725:124;:::o;25855:232::-;25995:34;25991:1;25983:6;25979:14;25972:58;26064:15;26059:2;26051:6;26047:15;26040:40;25961:126;:::o;26093:220::-;26233:34;26229:1;26221:6;26217:14;26210:58;26302:3;26297:2;26289:6;26285:15;26278:28;26199:114;:::o;26319:295::-;26459:34;26455:1;26447:6;26443:14;26436:58;26528:34;26523:2;26515:6;26511:15;26504:59;26597:9;26592:2;26584:6;26580:15;26573:34;26425:189;:::o;26620:220::-;26760:34;26756:1;26748:6;26744:14;26737:58;26829:3;26824:2;26816:6;26812:15;26805:28;26726:114;:::o;26846:223::-;26986:34;26982:1;26974:6;26970:14;26963:58;27055:6;27050:2;27042:6;27038:15;27031:31;26952:117;:::o;27075:245::-;27215:34;27211:1;27203:6;27199:14;27192:58;27284:28;27279:2;27271:6;27267:15;27260:53;27181:139;:::o;27326:114::-;27432:8;:::o;27446:240::-;27586:34;27582:1;27574:6;27570:14;27563:58;27655:23;27650:2;27642:6;27638:15;27631:48;27552:134;:::o;27692:251::-;27832:34;27828:1;27820:6;27816:14;27809:58;27901:34;27896:2;27888:6;27884:15;27877:59;27798:145;:::o;27949:227::-;28089:34;28085:1;28077:6;28073:14;28066:58;28158:10;28153:2;28145:6;28141:15;28134:35;28055:121;:::o;28182:122::-;28255:24;28273:5;28255:24;:::i;:::-;28248:5;28245:35;28235:2;;28294:1;28291;28284:12;28235:2;28225:79;:::o;28310:116::-;28380:21;28395:5;28380:21;:::i;:::-;28373:5;28370:32;28360:2;;28416:1;28413;28406:12;28360:2;28350:76;:::o;28432:120::-;28504:23;28521:5;28504:23;:::i;:::-;28497:5;28494:34;28484:2;;28542:1;28539;28532:12;28484:2;28474:78;:::o;28558:122::-;28631:24;28649:5;28631:24;:::i;:::-;28624:5;28621:35;28611:2;;28670:1;28667;28660:12;28611:2;28601:79;:::o",
  "source": "/// SPDX-License-Identifier: None\npragma solidity ^0.8.0;\n\nimport \"./ERC20PaymentStandard.sol\";\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/**\n* @title ERC20CollateralPayment\n* @author Carson Case\n* @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added\n */\ncontract ERC20CollateralPayment is ERC20PaymentStandard{\n    /// @notice collateral info is stored in a struct/mapping pair\n    struct collateral{\n        address ERC20Contract;\n        uint256 ammount;\n    }\n    mapping(uint256 => collateral) public collateralLookup;\n\n    /**\n    * @notice constructor just runs the ERC20PaymentStandard constructor\n    * @param _bonds is the contract address of bonds\n     */\n    constructor(address _bonds) ERC20PaymentStandard(_bonds){}\n\n    /**\n    * @notice addCollateral must be called before issuing loan\n    * @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n    * @param _ammount is the ammount to add as collateral\n    * @param _loanId is the loan ID to add collateral to\n     */\n    function addCollateral(address _ERC20Contract, uint256 _ammount, uint256 _loanId) external{\n        require(loanLookup[_loanId].borrower == msg.sender, \"only the borrower can add collateral\");\n        IERC20 erc20 = IERC20(_ERC20Contract);\n        if(collateralLookup[_loanId].ammount == 0){\n            collateralLookup[_loanId] = collateral(_ERC20Contract, _ammount);\n        }else{\n            require(_ERC20Contract == collateralLookup[_loanId].ERC20Contract, \"When increasing collateral, you must use the same ERC20 address \");\n            collateralLookup[_loanId].ammount += _ammount;\n        }\n        erc20.transferFrom(msg.sender, address(this), _ammount);\n    }\n\n    /**\n    * @notice return Collateral when the loan is complete \n    * @param _loanId is the loan ID\n     */\n    function returnCollateral(uint256 _loanId) external{\n        require(msg.sender == loanLookup[_loanId].borrower, \"only the borrower can collect collateral\");\n        require(isComplete(_loanId) || !loanLookup[_loanId].issued, \"loan must be paid off or not started to collect collateral\");\n        IERC20 erc20 = IERC20(collateralLookup[_loanId].ERC20Contract);\n        erc20.transfer(msg.sender, collateralLookup[_loanId].ammount);\n    }\n\n    /**\n    * @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n    * However that was not a good idea as a hacker could create fake bonds.\n    * @param _id is the id of the bond to send in\n    * @param _amm is the ammount to send\n     */\n    function withdrawl(uint256 _id, uint256 _amm) external override{\n        IERC1155 erc1155 = IERC1155(bondContract);\n        IERC20 erc20 = IERC20(loanLookup[_id].ERC20Address);\n        IERC20 col = IERC20(collateralLookup[_id].ERC20Contract);\n        require(loanLookup[_id].issued, \"this loan has not been issued yet. How do you even have bonds for it???\");\n        require(_amm <= loanLookup[_id].awaitingCollection,\"There is not enough payments available for collection\");\n        erc1155.safeTransferFrom(msg.sender, address(this), _id, _amm, \"\");\n        erc20.transfer(msg.sender, _amm);\n        if(isDelinquent(_id) && collateralLookup[_id].ammount !=0){\n            if(collateralLookup[_id].ammount < _amm){\n                collateralLookup[_id].ammount = 0;\n                col.transfer(msg.sender, collateralLookup[_id].ammount);\n            }else{\n                collateralLookup[_id].ammount -= _amm;\n                col.transfer(msg.sender, _amm);\n            }\n        }\n    }\n}",
  "sourcePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
  "ast": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
    "exportedSymbols": {
      "Address": [
        3640
      ],
      "Context": [
        3663
      ],
      "ERC1155": [
        2502
      ],
      "ERC1155Holder": [
        2731
      ],
      "ERC1155Receiver": [
        2765
      ],
      "ERC165": [
        3687
      ],
      "ERC20CollateralPayment": [
        854
      ],
      "ERC20PaymentStandard": [
        1330
      ],
      "IERC1155": [
        2624
      ],
      "IERC1155MetadataURI": [
        2680
      ],
      "IERC1155Receiver": [
        2665
      ],
      "IERC165": [
        3699
      ],
      "IERC20": [
        3344
      ],
      "IERC20PaymentStandard": [
        1447
      ]
    },
    "id": 855,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 568,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:1"
      },
      {
        "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
        "file": "./ERC20PaymentStandard.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 1331,
        "src": "59:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 3345,
        "src": "96:70:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 570,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:6:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 573,
              "name": "ERC20PaymentStandard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1330,
              "src": "377:20:1"
            },
            "id": 574,
            "nodeType": "InheritanceSpecifier",
            "src": "377:20:1"
          }
        ],
        "contractDependencies": [
          1330,
          2665,
          2731,
          2765,
          3687,
          3699
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 572,
          "nodeType": "StructuredDocumentation",
          "src": "168:173:1",
          "text": " @title ERC20CollateralPayment\n @author Carson Case\n @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
        },
        "fullyImplemented": true,
        "id": 854,
        "linearizedBaseContracts": [
          854,
          1330,
          2731,
          2765,
          2665,
          3687,
          3699
        ],
        "name": "ERC20CollateralPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20CollateralPayment.collateral",
            "id": 579,
            "members": [
              {
                "constant": false,
                "id": 576,
                "mutability": "mutable",
                "name": "ERC20Contract",
                "nodeType": "VariableDeclaration",
                "scope": 579,
                "src": "497:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 575,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 578,
                "mutability": "mutable",
                "name": "ammount",
                "nodeType": "VariableDeclaration",
                "scope": 579,
                "src": "528:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 577,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "collateral",
            "nodeType": "StructDefinition",
            "scope": 854,
            "src": "470:80:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "444da0c9",
            "id": 584,
            "mutability": "mutable",
            "name": "collateralLookup",
            "nodeType": "VariableDeclaration",
            "scope": 854,
            "src": "555:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
            },
            "typeName": {
              "id": 583,
              "keyType": {
                "id": 580,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "555:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
              },
              "valueType": {
                "id": 582,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 581,
                  "name": "collateral",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 579,
                  "src": "574:10:1"
                },
                "referencedDeclaration": 579,
                "src": "574:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateral_$579_storage_ptr",
                  "typeString": "struct ERC20CollateralPayment.collateral"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "814:2:1",
              "statements": []
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "616:137:1",
              "text": " @notice constructor just runs the ERC20PaymentStandard constructor\n @param _bonds is the contract address of bonds"
            },
            "id": 594,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 590,
                    "name": "_bonds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "807:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 591,
                "modifierName": {
                  "id": 589,
                  "name": "ERC20PaymentStandard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1330,
                  "src": "786:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:28:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "770:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:16:1"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:1"
            },
            "scope": 854,
            "src": "758:58:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "1231:582:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "1249:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 607,
                            "indexExpression": {
                              "id": 606,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "1260:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 875,
                          "src": "1249:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1249:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        },
                        "value": "only the borrower can add collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1241:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:91:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:91:1"
                },
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "1342:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 615,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "1342:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "1342:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "_ERC20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "1364:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 618,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "1357:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1342:37:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 622,
                          "name": "collateralLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "1392:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "id": 623,
                          "name": "_loanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 601,
                          "src": "1409:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1392:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateral_$579_storage",
                          "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ammount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 578,
                      "src": "1392:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1429:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1392:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "1524:218:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 639,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "1546:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 640,
                                    "name": "collateralLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 584,
                                    "src": "1564:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                    }
                                  },
                                  "id": 642,
                                  "indexExpression": {
                                    "id": 641,
                                    "name": "_loanId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "1581:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1564:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateral_$579_storage",
                                    "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                  }
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC20Contract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 576,
                                "src": "1564:39:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1546:57:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              },
                              "value": "When increasing collateral, you must use the same ERC20 address "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              }
                            ],
                            "id": 638,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:134:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:134:1"
                      },
                      {
                        "expression": {
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 648,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "1686:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 650,
                              "indexExpression": {
                                "id": 649,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "1703:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1686:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$579_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 578,
                            "src": "1686:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 652,
                            "name": "_ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "1723:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1686:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "1686:45:1"
                      }
                    ]
                  },
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "1389:353:1",
                  "trueBody": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "1431:89:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 628,
                              "name": "collateralLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "1445:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                              }
                            },
                            "id": 630,
                            "indexExpression": {
                              "id": 629,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "1462:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1445:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$579_storage",
                              "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 632,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "1484:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 633,
                                "name": "_ammount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 599,
                                "src": "1500:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 631,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "1473:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_collateral_$579_storage_ptr_$",
                                "typeString": "type(struct ERC20CollateralPayment.collateral storage pointer)"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1473:36:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$579_memory_ptr",
                              "typeString": "struct ERC20CollateralPayment.collateral memory"
                            }
                          },
                          "src": "1445:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:64:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1770:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1770:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 664,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1790:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 666,
                        "name": "_ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1797:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 657,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "1751:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3325,
                      "src": "1751:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:55:1"
                }
              ]
            },
            "documentation": {
              "id": 595,
              "nodeType": "StructuredDocumentation",
              "src": "822:314:1",
              "text": " @notice addCollateral must be called before issuing loan\n @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n @param _ammount is the ammount to add as collateral\n @param _loanId is the loan ID to add collateral to"
            },
            "functionSelector": "c75cf245",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_ERC20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1164:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "_ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1188:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1206:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:59:1"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:1"
            },
            "scope": 854,
            "src": "1141:672:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "1981:386:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 677,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1999:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1999:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 679,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2013:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "2024:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2013:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 875,
                          "src": "2013:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1999:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        },
                        "value": "only the borrower can collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1991:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:95:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 689,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "2115:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 688,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "2104:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2127:27:1",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 691,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "2128:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 693,
                              "indexExpression": {
                                "id": 692,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 673,
                                "src": "2139:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$894_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 871,
                            "src": "2128:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2104:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        },
                        "value": "loan must be paid off or not started to collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:121:1"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "2227:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 701,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 700,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2227:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 704,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2249:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 706,
                          "indexExpression": {
                            "id": 705,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 673,
                            "src": "2266:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2249:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 576,
                        "src": "2249:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 703,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2314:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2314:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 715,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2326:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 717,
                          "indexExpression": {
                            "id": 716,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 673,
                            "src": "2343:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2326:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 578,
                        "src": "2326:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 710,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "2299:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3293,
                      "src": "2299:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:61:1"
                }
              ]
            },
            "documentation": {
              "id": 671,
              "nodeType": "StructuredDocumentation",
              "src": "1819:106:1",
              "text": " @notice return Collateral when the loan is complete \n @param _loanId is the loan ID"
            },
            "functionSelector": "44e02dbc",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "1956:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1955:17:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:1"
            },
            "scope": 854,
            "src": "1930:437:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1274
            ],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "2753:928:1",
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "erc1155",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2763:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2624",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2624,
                          "src": "2763:8:1"
                        },
                        "referencedDeclaration": 2624,
                        "src": "2763:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2624",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "2791:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 734,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "2782:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2624_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2624",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:41:1"
                },
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2814:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 738,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2814:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2814:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 742,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "2836:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 744,
                          "indexExpression": {
                            "id": 743,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2847:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2836:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$894_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 873,
                        "src": "2836:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 741,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2829:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:51:1"
                },
                {
                  "assignments": [
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 750,
                      "mutability": "mutable",
                      "name": "col",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2875:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 749,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 748,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2875:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2875:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 752,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2895:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 754,
                          "indexExpression": {
                            "id": 753,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2912:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2895:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 576,
                        "src": "2895:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 751,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2888:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2875:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 759,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "2949:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "id": 760,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2960:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$894_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "2949:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2941:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:106:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 767,
                          "name": "_amm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "3065:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 768,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "3073:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 770,
                            "indexExpression": {
                              "id": 769,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "3084:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3073:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "awaitingCollection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 891,
                          "src": "3073:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3065:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7420656e6f756768207061796d656e747320617661696c61626c6520666f7220636f6c6c656374696f6e",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3108:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
                          "typeString": "literal_string \"There is not enough payments available for collection\""
                        },
                        "value": "There is not enough payments available for collection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
                          "typeString": "literal_string \"There is not enough payments available for collection\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3057:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3199:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3219:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3211:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3211:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3211:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "3226:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 786,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3231:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3237:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 776,
                        "name": "erc1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "3174:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2624",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2607,
                      "src": "3174:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3265:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3265:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 795,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3277:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 790,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "3250:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3293,
                      "src": "3250:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3250:32:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 799,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "3308:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 798,
                        "name": "isDelinquent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "3295:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3295:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 801,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "3316:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 803,
                          "indexExpression": {
                            "id": 802,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "3333:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3316:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 578,
                        "src": "3316:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3348:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3316:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3295:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 851,
                  "nodeType": "IfStatement",
                  "src": "3292:383:1",
                  "trueBody": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "3350:325:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 808,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "3367:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 810,
                              "indexExpression": {
                                "id": 809,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "3384:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3367:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$579_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 578,
                            "src": "3367:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 812,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "3399:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3367:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 848,
                          "nodeType": "Block",
                          "src": "3547:118:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 833,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "3565:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 835,
                                    "indexExpression": {
                                      "id": 834,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "3582:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3565:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$579_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 836,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 578,
                                  "src": "3565:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 837,
                                  "name": "_amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "3598:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3565:37:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 839,
                              "nodeType": "ExpressionStatement",
                              "src": "3565:37:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 843,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3633:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3633:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 845,
                                    "name": "_amm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 727,
                                    "src": "3645:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 840,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "3620:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3344",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3293,
                                  "src": "3620:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3620:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 847,
                              "nodeType": "ExpressionStatement",
                              "src": "3620:30:1"
                            }
                          ]
                        },
                        "id": 849,
                        "nodeType": "IfStatement",
                        "src": "3364:301:1",
                        "trueBody": {
                          "id": 832,
                          "nodeType": "Block",
                          "src": "3404:139:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 814,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "3422:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 816,
                                    "indexExpression": {
                                      "id": 815,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "3439:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3422:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$579_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 578,
                                  "src": "3422:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3454:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3422:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 820,
                              "nodeType": "ExpressionStatement",
                              "src": "3422:33:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 824,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3486:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3486:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 826,
                                        "name": "collateralLookup",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 584,
                                        "src": "3498:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                          "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                        }
                                      },
                                      "id": 828,
                                      "indexExpression": {
                                        "id": 827,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 725,
                                        "src": "3515:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3498:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateral_$579_storage",
                                        "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                      }
                                    },
                                    "id": 829,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ammount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 578,
                                    "src": "3498:29:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 821,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "3473:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3344",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3293,
                                  "src": "3473:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3473:55:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 831,
                              "nodeType": "ExpressionStatement",
                              "src": "3473:55:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "2373:312:1",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:1"
            },
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "2709:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "2722:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:27:1"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:0:1"
            },
            "scope": 854,
            "src": "2690:991:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 855,
        "src": "342:3341:1"
      }
    ],
    "src": "34:3649:1"
  },
  "legacyAST": {
    "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20CollateralPayment.sol",
    "exportedSymbols": {
      "Address": [
        3640
      ],
      "Context": [
        3663
      ],
      "ERC1155": [
        2502
      ],
      "ERC1155Holder": [
        2731
      ],
      "ERC1155Receiver": [
        2765
      ],
      "ERC165": [
        3687
      ],
      "ERC20CollateralPayment": [
        854
      ],
      "ERC20PaymentStandard": [
        1330
      ],
      "IERC1155": [
        2624
      ],
      "IERC1155MetadataURI": [
        2680
      ],
      "IERC1155Receiver": [
        2665
      ],
      "IERC165": [
        3699
      ],
      "IERC20": [
        3344
      ],
      "IERC20PaymentStandard": [
        1447
      ]
    },
    "id": 855,
    "license": "None",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 568,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:1"
      },
      {
        "absolutePath": "/home/carson/Documents/linkHackathon2021/loan-wolf/contracts/contracts/ERC20PaymentStandard.sol",
        "file": "./ERC20PaymentStandard.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 1331,
        "src": "59:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 855,
        "sourceUnit": 3345,
        "src": "96:70:1",
        "symbolAliases": [
          {
            "foreign": {
              "id": 570,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:6:1",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 573,
              "name": "ERC20PaymentStandard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1330,
              "src": "377:20:1"
            },
            "id": 574,
            "nodeType": "InheritanceSpecifier",
            "src": "377:20:1"
          }
        ],
        "contractDependencies": [
          1330,
          2665,
          2731,
          2765,
          3687,
          3699
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 572,
          "nodeType": "StructuredDocumentation",
          "src": "168:173:1",
          "text": " @title ERC20CollateralPayment\n @author Carson Case\n @notice this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added"
        },
        "fullyImplemented": true,
        "id": 854,
        "linearizedBaseContracts": [
          854,
          1330,
          2731,
          2765,
          2665,
          3687,
          3699
        ],
        "name": "ERC20CollateralPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20CollateralPayment.collateral",
            "id": 579,
            "members": [
              {
                "constant": false,
                "id": 576,
                "mutability": "mutable",
                "name": "ERC20Contract",
                "nodeType": "VariableDeclaration",
                "scope": 579,
                "src": "497:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 575,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "497:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 578,
                "mutability": "mutable",
                "name": "ammount",
                "nodeType": "VariableDeclaration",
                "scope": 579,
                "src": "528:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 577,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "528:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "collateral",
            "nodeType": "StructDefinition",
            "scope": 854,
            "src": "470:80:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "444da0c9",
            "id": 584,
            "mutability": "mutable",
            "name": "collateralLookup",
            "nodeType": "VariableDeclaration",
            "scope": 854,
            "src": "555:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
            },
            "typeName": {
              "id": 583,
              "keyType": {
                "id": 580,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "555:30:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral)"
              },
              "valueType": {
                "id": 582,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 581,
                  "name": "collateral",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 579,
                  "src": "574:10:1"
                },
                "referencedDeclaration": 579,
                "src": "574:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateral_$579_storage_ptr",
                  "typeString": "struct ERC20CollateralPayment.collateral"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "814:2:1",
              "statements": []
            },
            "documentation": {
              "id": 585,
              "nodeType": "StructuredDocumentation",
              "src": "616:137:1",
              "text": " @notice constructor just runs the ERC20PaymentStandard constructor\n @param _bonds is the contract address of bonds"
            },
            "id": 594,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 590,
                    "name": "_bonds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "807:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 591,
                "modifierName": {
                  "id": 589,
                  "name": "ERC20PaymentStandard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1330,
                  "src": "786:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "786:28:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "_bonds",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "770:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:16:1"
            },
            "returnParameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:1"
            },
            "scope": 854,
            "src": "758:58:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "1231:582:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 605,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "1249:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 607,
                            "indexExpression": {
                              "id": 606,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "1260:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 875,
                          "src": "1249:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 609,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1249:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e2061646420636f6c6c61746572616c",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        },
                        "value": "only the borrower can add collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_945ea55890a235a76833d98d0c9de805b0c3a8457c9ca1efc31f4ce695fe9a4d",
                          "typeString": "literal_string \"only the borrower can add collateral\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1241:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:91:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:91:1"
                },
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 669,
                      "src": "1342:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 615,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "1342:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "1342:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "_ERC20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "1364:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 618,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "1357:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1342:37:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 622,
                          "name": "collateralLookup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "1392:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                            "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "id": 623,
                          "name": "_loanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 601,
                          "src": "1409:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1392:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateral_$579_storage",
                          "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ammount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 578,
                      "src": "1392:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1429:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1392:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "1524:218:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 639,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "1546:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 640,
                                    "name": "collateralLookup",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 584,
                                    "src": "1564:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                    }
                                  },
                                  "id": 642,
                                  "indexExpression": {
                                    "id": 641,
                                    "name": "_loanId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "1581:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1564:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateral_$579_storage",
                                    "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                  }
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC20Contract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 576,
                                "src": "1564:39:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1546:57:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5768656e20696e6372656173696e6720636f6c6c61746572616c2c20796f75206d75737420757365207468652073616d65204552433230206164647265737320",
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1605:66:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              },
                              "value": "When increasing collateral, you must use the same ERC20 address "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d242623d7e92254499ed252cd412302aac911f2a5677da46374b20fa26401dcd",
                                "typeString": "literal_string \"When increasing collateral, you must use the same ERC20 address \""
                              }
                            ],
                            "id": 638,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1538:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1538:134:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 647,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:134:1"
                      },
                      {
                        "expression": {
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 648,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "1686:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 650,
                              "indexExpression": {
                                "id": 649,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "1703:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1686:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$579_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 578,
                            "src": "1686:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 652,
                            "name": "_ammount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "1723:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1686:45:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "1686:45:1"
                      }
                    ]
                  },
                  "id": 656,
                  "nodeType": "IfStatement",
                  "src": "1389:353:1",
                  "trueBody": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "1431:89:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 628,
                              "name": "collateralLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "1445:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                              }
                            },
                            "id": 630,
                            "indexExpression": {
                              "id": 629,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "1462:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1445:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$579_storage",
                              "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 632,
                                "name": "_ERC20Contract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "1484:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 633,
                                "name": "_ammount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 599,
                                "src": "1500:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 631,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "1473:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_collateral_$579_storage_ptr_$",
                                "typeString": "type(struct ERC20CollateralPayment.collateral storage pointer)"
                              }
                            },
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1473:36:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateral_$579_memory_ptr",
                              "typeString": "struct ERC20CollateralPayment.collateral memory"
                            }
                          },
                          "src": "1445:64:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "1445:64:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1770:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1770:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 664,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1790:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 662,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 666,
                        "name": "_ammount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1797:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 657,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "1751:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3325,
                      "src": "1751:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:55:1"
                }
              ]
            },
            "documentation": {
              "id": 595,
              "nodeType": "StructuredDocumentation",
              "src": "822:314:1",
              "text": " @notice addCollateral must be called before issuing loan\n @param _ERC20Contract address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20\n @param _ammount is the ammount to add as collateral\n @param _loanId is the loan ID to add collateral to"
            },
            "functionSelector": "c75cf245",
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_ERC20Contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1164:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "_ammount",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1188:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "1206:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:59:1"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1231:0:1"
            },
            "scope": 854,
            "src": "1141:672:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "1981:386:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 677,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1999:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1999:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 679,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "2013:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 681,
                            "indexExpression": {
                              "id": 680,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "2024:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2013:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 875,
                          "src": "2013:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1999:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792074686520626f72726f7765722063616e20636f6c6c65637420636f6c6c61746572616c",
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        },
                        "value": "only the borrower can collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07ebf33d9fbe168b3d110dca107108da7370b9d4ba822b21adc810b4be47a7c",
                          "typeString": "literal_string \"only the borrower can collect collateral\""
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1991:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:95:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 689,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "2115:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 688,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1299,
                            "src": "2104:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2127:27:1",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 691,
                                "name": "loanLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "2128:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                                }
                              },
                              "id": 693,
                              "indexExpression": {
                                "id": 692,
                                "name": "_loanId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 673,
                                "src": "2139:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2128:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_loan_$894_storage",
                                "typeString": "struct ERC20PaymentStandard.loan storage ref"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issued",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 871,
                            "src": "2128:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2104:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f616e206d7573742062652070616964206f6666206f72206e6f74207374617274656420746f20636f6c6c65637420636f6c6c61746572616c",
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2156:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        },
                        "value": "loan must be paid off or not started to collect collateral"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b598475e69cf4dac8ea82beaf18e968d92b30372bcd868882376c42041ee0425",
                          "typeString": "literal_string \"loan must be paid off or not started to collect collateral\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2096:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:121:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "2096:121:1"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "2227:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 701,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 700,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2227:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 704,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2249:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 706,
                          "indexExpression": {
                            "id": 705,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 673,
                            "src": "2266:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2249:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 576,
                        "src": "2249:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 703,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2242:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2314:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2314:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 715,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2326:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 717,
                          "indexExpression": {
                            "id": 716,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 673,
                            "src": "2343:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2326:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 578,
                        "src": "2326:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 710,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "2299:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3293,
                      "src": "2299:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:61:1"
                }
              ]
            },
            "documentation": {
              "id": 671,
              "nodeType": "StructuredDocumentation",
              "src": "1819:106:1",
              "text": " @notice return Collateral when the loan is complete \n @param _loanId is the loan ID"
            },
            "functionSelector": "44e02dbc",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "returnCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "_loanId",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "1956:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1956:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1955:17:1"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:1"
            },
            "scope": 854,
            "src": "1930:437:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1274
            ],
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "2753:928:1",
              "statements": [
                {
                  "assignments": [
                    733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 733,
                      "mutability": "mutable",
                      "name": "erc1155",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2763:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$2624",
                        "typeString": "contract IERC1155"
                      },
                      "typeName": {
                        "id": 732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 731,
                          "name": "IERC1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2624,
                          "src": "2763:8:1"
                        },
                        "referencedDeclaration": 2624,
                        "src": "2763:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2624",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "bondContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "2791:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 734,
                      "name": "IERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2624,
                      "src": "2782:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$2624_$",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$2624",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:41:1"
                },
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2814:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 738,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2814:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2814:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 747,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 742,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "2836:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 744,
                          "indexExpression": {
                            "id": 743,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2847:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2836:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$894_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 873,
                        "src": "2836:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 741,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2829:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2829:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:51:1"
                },
                {
                  "assignments": [
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 750,
                      "mutability": "mutable",
                      "name": "col",
                      "nodeType": "VariableDeclaration",
                      "scope": 852,
                      "src": "2875:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3344",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 749,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 748,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3344,
                          "src": "2875:6:1"
                        },
                        "referencedDeclaration": 3344,
                        "src": "2875:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 752,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "2895:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 754,
                          "indexExpression": {
                            "id": 753,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2912:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2895:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ERC20Contract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 576,
                        "src": "2895:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 751,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "2888:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3344_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3344",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2875:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 759,
                            "name": "loanLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "2949:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "id": 760,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2960:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2949:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_loan_$894_storage",
                            "typeString": "struct ERC20PaymentStandard.loan storage ref"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issued",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 871,
                        "src": "2949:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206c6f616e20686173206e6f74206265656e20697373756564207965742e20486f7720646f20796f75206576656e206861766520626f6e647320666f722069743f3f3f",
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2973:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        },
                        "value": "this loan has not been issued yet. How do you even have bonds for it???"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_782308f52b5f3a937a65495fef9333d16853b8a1f1d544d38842b1b1f065e367",
                          "typeString": "literal_string \"this loan has not been issued yet. How do you even have bonds for it???\""
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2941:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:106:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 767,
                          "name": "_amm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "3065:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 768,
                              "name": "loanLookup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "3073:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_loan_$894_storage_$",
                                "typeString": "mapping(uint256 => struct ERC20PaymentStandard.loan storage ref)"
                              }
                            },
                            "id": 770,
                            "indexExpression": {
                              "id": 769,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "3084:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3073:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_loan_$894_storage",
                              "typeString": "struct ERC20PaymentStandard.loan storage ref"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "awaitingCollection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 891,
                          "src": "3073:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3065:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7420656e6f756768207061796d656e747320617661696c61626c6520666f7220636f6c6c656374696f6e",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3108:55:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
                          "typeString": "literal_string \"There is not enough payments available for collection\""
                        },
                        "value": "There is not enough payments available for collection"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5dc299759252fb64e58937295e75e07ffcebddf7b5b935d2cf216cd038ba2cf",
                          "typeString": "literal_string \"There is not enough payments available for collection\""
                        }
                      ],
                      "id": 766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3057:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3199:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3199:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3219:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20CollateralPayment_$854",
                              "typeString": "contract ERC20CollateralPayment"
                            }
                          ],
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3211:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3211:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3211:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 785,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 725,
                        "src": "3226:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 786,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3231:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3237:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 776,
                        "name": "erc1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "3174:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$2624",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2607,
                      "src": "3174:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3265:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3265:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 795,
                        "name": "_amm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "3277:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 790,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "3250:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3344",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3293,
                      "src": "3250:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "3250:32:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 799,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "3308:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 798,
                        "name": "isDelinquent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "3295:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3295:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 801,
                            "name": "collateralLookup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "3316:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                              "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                            }
                          },
                          "id": 803,
                          "indexExpression": {
                            "id": 802,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "3333:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3316:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateral_$579_storage",
                            "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                          }
                        },
                        "id": 804,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ammount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 578,
                        "src": "3316:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3348:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3316:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3295:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 851,
                  "nodeType": "IfStatement",
                  "src": "3292:383:1",
                  "trueBody": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "3350:325:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 808,
                                "name": "collateralLookup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "3367:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                }
                              },
                              "id": 810,
                              "indexExpression": {
                                "id": 809,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 725,
                                "src": "3384:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3367:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateral_$579_storage",
                                "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ammount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 578,
                            "src": "3367:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 812,
                            "name": "_amm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "3399:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3367:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 848,
                          "nodeType": "Block",
                          "src": "3547:118:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 838,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 833,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "3565:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 835,
                                    "indexExpression": {
                                      "id": 834,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "3582:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3565:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$579_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 836,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 578,
                                  "src": "3565:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 837,
                                  "name": "_amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 727,
                                  "src": "3598:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3565:37:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 839,
                              "nodeType": "ExpressionStatement",
                              "src": "3565:37:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 843,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3633:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3633:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 845,
                                    "name": "_amm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 727,
                                    "src": "3645:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 840,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "3620:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3344",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3293,
                                  "src": "3620:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3620:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 847,
                              "nodeType": "ExpressionStatement",
                              "src": "3620:30:1"
                            }
                          ]
                        },
                        "id": 849,
                        "nodeType": "IfStatement",
                        "src": "3364:301:1",
                        "trueBody": {
                          "id": 832,
                          "nodeType": "Block",
                          "src": "3404:139:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 814,
                                      "name": "collateralLookup",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 584,
                                      "src": "3422:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                      }
                                    },
                                    "id": 816,
                                    "indexExpression": {
                                      "id": 815,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "3439:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3422:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_collateral_$579_storage",
                                      "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                    }
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ammount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 578,
                                  "src": "3422:29:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3454:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3422:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 820,
                              "nodeType": "ExpressionStatement",
                              "src": "3422:33:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 824,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3486:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3486:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 826,
                                        "name": "collateralLookup",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 584,
                                        "src": "3498:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_collateral_$579_storage_$",
                                          "typeString": "mapping(uint256 => struct ERC20CollateralPayment.collateral storage ref)"
                                        }
                                      },
                                      "id": 828,
                                      "indexExpression": {
                                        "id": 827,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 725,
                                        "src": "3515:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3498:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateral_$579_storage",
                                        "typeString": "struct ERC20CollateralPayment.collateral storage ref"
                                      }
                                    },
                                    "id": 829,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ammount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 578,
                                    "src": "3498:29:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 821,
                                    "name": "col",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 750,
                                    "src": "3473:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$3344",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3293,
                                  "src": "3473:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3473:55:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 831,
                              "nodeType": "ExpressionStatement",
                              "src": "3473:55:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "2373:312:1",
              "text": " @notice MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function.\n However that was not a good idea as a hacker could create fake bonds.\n @param _id is the id of the bond to send in\n @param _amm is the ammount to send"
            },
            "functionSelector": "a97868be",
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawl",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 729,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2745:8:1"
            },
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "2709:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "_amm",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "2722:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:27:1"
            },
            "returnParameters": {
              "id": 730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:0:1"
            },
            "scope": 854,
            "src": "2690:991:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 855,
        "src": "342:3341:1"
      }
    ],
    "src": "34:3649:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb2522fbB21777bC6fd35790a296691C51A1F4965",
      "transactionHash": "0x43144c12aecf438f5bee590ac879f166685a7a7fadc28ddbdfffd48686723c52"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-06T01:53:48.062Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Carson Case",
    "kind": "dev",
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "params": {
          "_ERC20Contract": "address of the ERC20 you want to have as collaterall. DOES NOT have to be equal to payment ERC20",
          "_ammount": "is the ammount to add as collateral",
          "_loanId": "is the loan ID to add collateral to"
        }
      },
      "addInterest(uint256,uint256)": {
        "params": {
          "_amm": "the ammount of interest to add",
          "_id": "is the id of the loan"
        },
        "returns": {
          "_0": "true if added. Will not add interest if payment has been completed. This prevents lenders from refusing to end a loan when it is rightfully over by forever increasing the totalPaymentsValue through interest staking and never fully collecting payment. This also means that if lenders do not realize interest gains soon enough they may not be able to collect them before the borrower can complete the loan."
        }
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "details": "borrower is msg.sender for testing. In production might want to make this a param",
        "params": {
          "_accrualPeriod": "the time it takes for interest to accrue in seconds",
          "_borrower": "is the borrower loan is being configured for. Keep in mind. ONLY this borrower can mint bonds to start the loan",
          "_erc20": "is the ERC20 contract address that will be used for payments",
          "_inverseInterestRate": "the interest rate expressed as inverse. 2% = 1/5 = inverse of 5",
          "_minPayment": "is the minimum payment that must be made before the payment period ends",
          "_paymentPeriod": "payment must be made by this time or delinquent function will return true",
          "_principal": "the origional loan value before interest"
        },
        "returns": {
          "_0": "the id it just created"
        }
      },
      "constructor": {
        "params": {
          "_bonds": "is the contract address of bonds"
        }
      },
      "getId(address,uint256)": {
        "params": {
          "_borrower": "is borrower",
          "_index": "is the index in the borrowers loan array"
        },
        "returns": {
          "_0": "the loan ID"
        }
      },
      "getInterest(uint256)": {
        "params": {
          "_id": "is the loan ID"
        },
        "returns": {
          "_0": "inverse interest rate"
        }
      },
      "getNumberOfLoans(address)": {
        "params": {
          "_who": "is who to look up"
        },
        "returns": {
          "_0": "length"
        }
      },
      "isComplete(uint256)": {
        "params": {
          "_id": "of loan to check"
        },
        "returns": {
          "_0": "return if the contract is payed off or not as bool"
        }
      },
      "isDelinquent(uint256)": {
        "params": {
          "_id": "is the hash id of the loan. Same as bond ERC1155 ID as well"
        },
        "returns": {
          "_0": "if delinquent or not. Meaning missed a payment"
        }
      },
      "issueBonds(uint256)": {
        "params": {
          "_id": "loan ID"
        },
        "returns": {
          "_0": "the loan principal (so bonds knows how many NFTs to mint)",
          "_1": "the borrowers address (so bonds can make sure borrower is calling this function)"
        }
      },
      "payment(uint256,uint256)": {
        "params": {
          "_erc20Ammount": "is ammount in loan's ERC20 to pay",
          "_id": "to pay off"
        }
      },
      "returnCollateral(uint256)": {
        "params": {
          "_loanId": "is the loan ID"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "withdrawl(uint256,uint256)": {
        "params": {
          "_amm": "is the ammount to send",
          "_id": "is the id of the bond to send in"
        }
      }
    },
    "title": "ERC20CollateralPayment",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addCollateral(address,uint256,uint256)": {
        "notice": "addCollateral must be called before issuing loan"
      },
      "addInterest(uint256,uint256)": {
        "notice": "Called each time new NFTs are minted by staking"
      },
      "configureNew(address,address,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "contract must be configured before bonds are issued. Pushes new loan to array for user"
      },
      "constructor": {
        "notice": "constructor just runs the ERC20PaymentStandard constructor"
      },
      "getId(address,uint256)": {
        "notice": "Returns the ID for a loan given the borrower and index in the array"
      },
      "getInterest(uint256)": {
        "notice": "get the interest rate of a loan. Makes it easy for other contract since it doens't have to use parse struct"
      },
      "getNumberOfLoans(address)": {
        "notice": "gets the number of loans a person has"
      },
      "isComplete(uint256)": {
        "notice": "helper function"
      },
      "isDelinquent(uint256)": {
        "notice": "This contract is not very forgiving. Miss one payment and you're marked as delinquent. Unless contract is complete"
      },
      "issueBonds(uint256)": {
        "notice": "called when bonds are issued so as to make sure lender can only mint bonds once."
      },
      "payment(uint256,uint256)": {
        "notice": "function handles the payment of the loan. Does not have to be borrower as payment comes in. The contract holds it until collection by bond owners. MUST APPROVE FIRST in ERC20 contract first"
      },
      "returnCollateral(uint256)": {
        "notice": "return Collateral when the loan is complete "
      },
      "withdrawl(uint256,uint256)": {
        "notice": "MUST approve this contract to spend your ERC1155s in bonds. Used to have this auto handled by the on received function. However that was not a good idea as a hacker could create fake bonds."
      }
    },
    "notice": "this is an example of a override of ERC20PaymentStandard. This offers ERC20 collateral to be be added",
    "version": 1
  }
}